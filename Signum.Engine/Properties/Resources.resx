<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="_0HasBeenRenamedIn1" xml:space="preserve">
    <value>'{0}' has been renamed in {1}?</value>
  </data>
  <data name="_0ObjectsInsertedButOnly1IdsAreGenerated" xml:space="preserve">
    <value> {0} objects inserted but only {1} ids have been generated</value>
  </data>
  <data name="_0RepeatedOnTable1" xml:space="preserve">
    <value>{0} repeated on table {1}</value>
  </data>
  <data name="AccessToQuery0IsNotAllowed" xml:space="preserve">
    <value>Access to Query '{0}' is not allowed</value>
  </data>
  <data name="AtLessOneNullableFieldMustBePassed" xml:space="preserve">
    <value>At less one nullable field must be passed</value>
  </data>
  <data name="BelongsToAnotherKindOkLinqProvider" xml:space="preserve">
    <value>{0} belongs to another kind ok Linq Provider</value>
  </data>
  <data name="CachingTypesTableFrom0" xml:space="preserve">
    <value>caching types' table from {0}</value>
  </data>
  <data name="CanNotBeAssignedFrom1" xml:space="preserve">
    <value>{0} can not be assigned from {1}</value>
  </data>
  <data name="CanNotBeAssignedToNull" xml:space="preserve">
    <value>{0} can not be assigned to null</value>
  </data>
  <data name="CannotEnumerateMoreThanOnce" xml:space="preserve">
    <value>Cannot enumerate more than once</value>
  </data>
  <data name="CannotInsertDuplicatedFields0On1Table" xml:space="preserve">
    <value>Cannot insert duplicated fields {0} on {1} table</value>
  </data>
  <data name="ConcurrencyErrorOnDatabaseTable0Id1" xml:space="preserve">
    <value>Concurrency error on database, Table = {0}, Id = {1}</value>
  </data>
  <data name="ConstantExpressionWithAComplexIQueryableUnexpectedAt" xml:space="preserve">
    <value>ConstantExpression with a complex IQueryable unexpected at this stage</value>
  </data>
  <data name="DoesNotImplement1" xml:space="preserve">
    <value>{0} does not implement {1}</value>
  </data>
  <data name="DoesNotInheritFromEmbeddedEntity" xml:space="preserve">
    <value>{0} does not inherit from EmbeddedEntity</value>
  </data>
  <data name="DoesNotRepresentAColumn" xml:space="preserve">
    <value>{0} does not represent a column</value>
  </data>
  <data name="EndOfSyncScript" xml:space="preserve">
    <value>--- END OF SYNC SCRIPT</value>
  </data>
  <data name="EntityColumnNotFound" xml:space="preserve">
    <value>Entity column not found</value>
  </data>
  <data name="EntityInNotDefinedForNewItemOfType0" xml:space="preserve">
    <value>EntityIn not defined for new Item of type {0}</value>
  </data>
  <data name="EntityOfType0AndId1NotFound" xml:space="preserve">
    <value>Entity of type {0} and Id {1} not found</value>
  </data>
  <data name="EntityWithType0AndId1NotFound" xml:space="preserve">
    <value>Entity with type {0} and Id {1} not found</value>
  </data>
  <data name="Error01" xml:space="preserve">
    <value>Error {0}: {1}</value>
  </data>
  <data name="Error0N1QueryProblem" xml:space="preserve">
    <value>Error {0}: N + 1 query problem</value>
  </data>
  <data name="ExceptionOn01" xml:space="preserve">
    <value>Exception on {0}: {1}</value>
  </data>
  <data name="ExpressionTypeIsNotIQueryable" xml:space="preserve">
    <value>expression Type is not IQueryable</value>
  </data>
  <data name="Field0ContainsBoth1And2" xml:space="preserve">
    <value>Field {0} contains both a {1} as a {2}</value>
  </data>
  <data name="Field0HasNullAndOsNotNullable" xml:space="preserve">
    <value>Field {0} has a null value but is not nullable</value>
  </data>
  <data name="Field0NotInType1" xml:space="preserve">
    <value>Field {0} not found on type {1}</value>
  </data>
  <data name="Field0OfTipe1HasNoCompatibleProperty" xml:space="preserve">
    <value>&lt;=!=&gt; The field {0} of type {1} has not corresponding property</value>
  </data>
  <data name="Field0OfType1HasNoDatabaseRepresentation" xml:space="preserve">
    <value>Field {0} of type {1} has no database representation</value>
  </data>
  <data name="Field0OfType1ShouldBeMappedAs2ButItIsIncompatibleWithContext3" xml:space="preserve">
    <value>Field {0} of type {1} shuld be mapped as {2} but is incompatible with context {3}</value>
  </data>
  <data name="FieldInitExpressionBindingsShouldBeEmpty" xml:space="preserve">
    <value>FieldInitExpression bindings should be empty</value>
  </data>
  <data name="Fields0AreSetAtTheSameTime" xml:space="preserve">
    <value>Fields {0} are set at the same time</value>
  </data>
  <data name="HasValueShouldBeABoolExpression" xml:space="preserve">
    <value>hasValue should be a bool expression</value>
  </data>
  <data name="ImplementedByAll01But23" xml:space="preserve">
    <value>ImplementedByAll {0} = {1} but {2} = {3}</value>
  </data>
  <data name="ImplementedByAllIsNotSupportedForFindLiteLike" xml:space="preserve">
    <value>ImplementedByAll is not supported for FindLiteLike</value>
  </data>
  <data name="ImplementedByAllIsNotSupportedForRetriveAllLite" xml:space="preserve">
    <value>ImplementedByAll is not supported for RetriveAllLite</value>
  </data>
  <data name="ImpossibleToConvertTheValueOf012To3" xml:space="preserve">
    <value>Impossible to convert the value of {0}.{1} ({2}) to {3}</value>
  </data>
  <data name="ImpossibleToIncludeInTheSchema" xml:space="preserve">
    <value>Impossible to include in the Schema:</value>
  </data>
  <data name="ImpossibleToSaveNullOnANotNullableEmbeddedFieldUseNullable" xml:space="preserve">
    <value>Impossible to save null on a not-nullable embedded field, use Nullable Attribute over the field</value>
  </data>
  <data name="IsNewButHasId1AndIdentityIsTrue" xml:space="preserve">
    <value>{0} is New, but has Id ({1}) and Identity is true</value>
  </data>
  <data name="MemberInfo0NotSupportedByCollectionField" xml:space="preserve">
    <value>MemberInfo {0} not supported by CollectionField</value>
  </data>
  <data name="MListOnImplementedByAreNotSupportedYet" xml:space="preserve">
    <value>MList on ImplementedBy are not supported yet</value>
  </data>
  <data name="MoreThanOneEntityColumn" xml:space="preserve">
    <value>More than one Entity column</value>
  </data>
  <data name="MsInitializing0" xml:space="preserve">
    <value>{1:0.00} ms initializing {0}</value>
  </data>
  <data name="MultipleIndexOnTheFollowingColumns" xml:space="preserve">
    <value>Multiple Index on the following Columns:</value>
  </data>
  <data name="NNone" xml:space="preserve">
    <value>- n: None</value>
  </data>
  <data name="NoCurrentConnectionEstablishedUseConnectionScopeDefaultToDoIt" xml:space="preserve">
    <value>No Current Connection established. Use ConnectionScope.Default to do it</value>
  </data>
  <data name="NoEntityCacheContextHasBeenCreated" xml:space="preserve">
    <value>No EntityCache context has been created</value>
  </data>
  <data name="NoFieldWasGiven" xml:space="preserve">
    <value>No field was given</value>
  </data>
  <data name="NoImplementationForTypeS0" xml:space="preserve">
    <value>No implementation for type(s) {0}</value>
  </data>
  <data name="NoNameForField0Defined" xml:space="preserve">
    <value>No name for field {0} is defined</value>
  </data>
  <data name="NoNameForType0Defined" xml:space="preserve">
    <value>No name for type {0} is defined</value>
  </data>
  <data name="NoStackFoundForThisKey" xml:space="preserve">
    <value>There is no stack for this key</value>
  </data>
  <data name="NotAllEntitiesOfType0AndIds1Removed" xml:space="preserve">
    <value>Not all entities of type {0} and ids {1} are removed</value>
  </data>
  <data name="NoWayOfMappingType0Found" xml:space="preserve">
    <value>No way of mapping type {0} found</value>
  </data>
  <data name="ReferenceToUndefinedColumn" xml:space="preserve">
    <value>Reference to undefined column</value>
  </data>
  <data name="SetOperationsAreNotAllowedOnQueriesWithNonSingleCellProjections" xml:space="preserve">
    <value>Set operations are not allowed on queries with Non-Single Cell projections</value>
  </data>
  <data name="StartOfSyncScriptGeneratedOn0" xml:space="preserve">
    <value>--- START OF SYNC SCRIPT GENERATED ON {0}</value>
  </data>
  <data name="SubqueryWith0Columns" xml:space="preserve">
    <value>subquery with {0} columns!</value>
  </data>
  <data name="Table0NotLoadedInSchema" xml:space="preserve">
    <value>Table for type {0} not loaded on current Schema</value>
  </data>
  <data name="TableForType0NotInSchema" xml:space="preserve">
    <value>Table for type {0} not loaded on current Schema</value>
  </data>
  <data name="TestingSqlConditionessForNonBooleanExpression0" xml:space="preserve">
    <value>Testing sql conditioness for non boolean expression: {0}</value>
  </data>
  <data name="TheBinaryOperator0IsNotSupported" xml:space="preserve">
    <value>The binary operator '{0}' is not supported</value>
  </data>
  <data name="TheConstantFor0IsNotSupported" xml:space="preserve">
    <value>The constant for '{0}' is not supported</value>
  </data>
  <data name="TheEntityIsNew" xml:space="preserve">
    <value>The entity is New</value>
  </data>
  <data name="TheExpressionCanTBeTranslatedToSQL" xml:space="preserve">
    <value>The expression can't be translated to SQL:
</value>
  </data>
  <data name="TheField0IsNotIncluded" xml:space="preserve">
    <value>The field {0} is not included</value>
  </data>
  <data name="TheFieldHasNoImplementationForType0" xml:space="preserve">
    <value>The field has no implementation for type {0}</value>
  </data>
  <data name="TheFollowingAttributesAreNotCompatibleWithTargets01" xml:space="preserve">
    <value>The following attributes are not compatible with Targets {0}: {1}</value>
  </data>
  <data name="TheMember0Of1IsNoAccesibleOnQueries" xml:space="preserve">
    <value>The member {0} of {1} is no accesible on queries</value>
  </data>
  <data name="TheMember0OfImplementedByAllIsNoAccesibleOnQueries" xml:space="preserve">
    <value>The member {0} of ImplementedByAll is no accesible on queries</value>
  </data>
  <data name="TheMember0OfLiteIsNoAccesibleOnQueriesUseEntityInstead" xml:space="preserve">
    <value>The member {0} of Lite is no accesible on queries, use Entity instead</value>
  </data>
  <data name="TheProperty0ForType1IsnotFound" xml:space="preserve">
    <value>Property {0} for type {1} not found</value>
  </data>
  <data name="ThereAre0ThatReferThisEntity" xml:space="preserve">
    <value>There are '{0}' that refer this entity</value>
  </data>
  <data name="ThereAreEntitiesOfDifferentTypes" xml:space="preserve">
    <value>There are entities of different types</value>
  </data>
  <data name="ThereAreMoreThanOneEntityColumn" xml:space="preserve">
    <value>There are more than one Entity column</value>
  </data>
  <data name="ThereAreRecordsIn0PointingToThisTableByColumn1" xml:space="preserve">
    <value>There are records in '{0}' pointing to this table by column '{1}'</value>
  </data>
  <data name="ThereIsADiferentInstanceOfTheSameObjectOnObjectCache" xml:space="preserve">
    <value>There is a different instance of the same of object on ObjectCache</value>
  </data>
  <data name="ThereIsASqlPreComandSimpleWithMoreThan0Parameters" xml:space="preserve">
    <value>There is a  SqlPreCommandSimple with more than {0} parameters</value>
  </data>
  <data name="ThereIsNoEntityColumn" xml:space="preserve">
    <value>There is no Entity column</value>
  </data>
  <data name="ThereMustBeMoreThanOneFieldPassedForTheMultiColumnTrigger" xml:space="preserve">
    <value>There must be more than one field passed for the MultiColumnTrigger</value>
  </data>
  <data name="TheTransactionIsRolledBack" xml:space="preserve">
    <value>The transaction is rolled back (a previous transaction has not been confirmed)</value>
  </data>
  <data name="TheType0IsNotInTheTypesTable" xml:space="preserve">
    <value>The type {0} is not in the Types Table</value>
  </data>
  <data name="TheType0IsNotTheLiteVersionOf1" xml:space="preserve">
    <value>The type {0} is not the Lite version of {1}</value>
  </data>
  <data name="TheUnaryOperator0IsNotSupported" xml:space="preserve">
    <value>The unary operator '{0}' is not supported</value>
  </data>
  <data name="TheView0IsNotOnQueryManager" xml:space="preserve">
    <value>View {0} is not in the QueryManager</value>
  </data>
  <data name="ToStrIsNoAccesibleOnQueriesInImplementedByAll" xml:space="preserve">
    <value>ToStr is no accesible on queries in ImplementedByAll</value>
  </data>
  <data name="TransactionRollbacked" xml:space="preserve">
    <value>TRANSACTION ROLLBACKED!</value>
  </data>
  <data name="Type0ContainsBoth1And2" xml:space="preserve">
    <value>Type {0} contains both {1} and {2}</value>
  </data>
  <data name="Type0IsAbstract" xml:space="preserve">
    <value>Type {0} is abstract</value>
  </data>
  <data name="Type0IsNotAMappedType1" xml:space="preserve">
    <value>Type {0} is not any of Mapped types : {1}</value>
  </data>
  <data name="Type0IsNotAnIdentifiableEntityOrAnEnum" xml:space="preserve">
    <value>Type {0} is not an Entity neither an Enum</value>
  </data>
  <data name="Type0IsNotIn1" xml:space="preserve">
    <value>Type {0} is not in {1}</value>
  </data>
  <data name="Type0NotFoundInTheSchema" xml:space="preserve">
    <value>Type {0} not found in the Schema</value>
  </data>
  <data name="TypeDNTableNotCached" xml:space="preserve">
    <value>TypeDN table not cached. Remember to call TypeLogic.Start in your Starter and call Administrator.InitializeCurrentSchema </value>
  </data>
  <data name="TypeOfExpressionIs0ButTypeOfFieldIs1" xml:space="preserve">
    <value>Type of Expression is  {0} but type of field is {1}</value>
  </data>
  <data name="Types0DoNotImplement1" xml:space="preserve">
    <value>The types  {0} do not implement {1}</value>
  </data>
  <data name="UnauthorizedAccessTo0" xml:space="preserve">
    <value>Unauthorized access to {0}</value>
  </data>
  <data name="UniqueMultiNullsWorksWithOnlyOneFieldUseAdministrator" xml:space="preserve">
    <value>UniqueMultiNulls works with only one field. Use Administrator.AddMultiColumnUniqueTriggerNullable instead.</value>
  </data>
  <data name="UserConnectionsFileFoundOn0" xml:space="preserve">
    <value>UserConnections file found on {0}</value>
  </data>
  <data name="Warning0NoResults" xml:space="preserve">
    <value>Warning {0}: No results</value>
  </data>
  <data name="EntityMustBeALite" xml:space="preserve">
    <value>Entity must be a Lite</value>
  </data>
  <data name="PropertyRouteCanNotBeOfTypeRoot" xml:space="preserve">
    <value>PropertyRoute can not be of type Root</value>
  </data>
  <data name="TheTypeOfColumn0IsASubtypeOfIIdentifiableUseALiteInstead" xml:space="preserve">
    <value>The type of column {0} is a subtype of IIdentifiable, use a Lite instead!!</value>
  </data>
</root>