//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using Signum.Utilities;
    using Signum.Entities;
    using Signum.Web;
    using System.Collections;
    using System.Collections.Specialized;
    using System.ComponentModel.DataAnnotations;
    using System.Configuration;
    using System.Text;
    using System.Text.RegularExpressions;
    using System.Web.Caching;
    using System.Web.DynamicData;
    using System.Web.SessionState;
    using System.Web.Profile;
    using System.Web.UI.WebControls;
    using System.Web.UI.WebControls.WebParts;
    using System.Web.UI.HtmlControls;
    using System.Xml.Linq;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MvcRazorClassGenerator", "1.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Signum/Views/SearchPopupControl.cshtml")]
    public class _Page_Signum_Views_SearchPopupControl_cshtml : System.Web.Mvc.WebViewPage<Context>
    {
#line hidden

        public _Page_Signum_Views_SearchPopupControl_cshtml()
        {
        }
        protected System.Web.HttpApplication ApplicationInstance
        {
            get
            {
                return ((System.Web.HttpApplication)(Context.ApplicationInstance));
            }
        }
        public override void Execute()
        {


    FindOptions findOptions = (FindOptions)ViewData[ViewDataKeys.FindOptions];

WriteLiteral("<div id=\"");


    Write(Model.Compose("panelPopup"));

WriteLiteral("\" data-title=\"");


                                              Write(ViewBag.Title);

WriteLiteral("\">\r\n    <div class=\"sf-button-bar\">\r\n        <input type=\"button\" id=\"");


                            Write(Model.Compose("btnOk"));

WriteLiteral("\" class=\"sf-query-button sf-ok-button\" value=\"OK\" ");


                                                                                                      Write(ViewData[ViewDataKeys.OnOk] != null ? Html.Raw("onclick=\"" + ViewData[ViewDataKeys.OnOk] + "\"") : null);

WriteLiteral(" />\r\n    </div>\r\n    <div class=\"sf-popup-body\">\r\n");


           Html.RenderPartial(ViewData[ViewDataKeys.PartialViewName].ToString(), Model);

WriteLiteral("        ");


   Write(Html.ValidationSummaryAjax(Model));

WriteLiteral("\r\n    </div>\r\n</div>\r\n");


        }
    }
}
