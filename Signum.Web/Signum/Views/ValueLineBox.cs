//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using Signum.Utilities;
    using Signum.Entities;
    using Signum.Web;
    using System.Collections;
    using System.Collections.Specialized;
    using System.ComponentModel.DataAnnotations;
    using System.Configuration;
    using System.Text;
    using System.Text.RegularExpressions;
    using System.Web.Caching;
    using System.Web.DynamicData;
    using System.Web.SessionState;
    using System.Web.Profile;
    using System.Web.UI.WebControls;
    using System.Web.UI.WebControls.WebParts;
    using System.Web.UI.HtmlControls;
    using System.Xml.Linq;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MvcRazorClassGenerator", "1.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Signum/Views/ValueLineBox.cshtml")]
    public class _Page_Signum_Views_ValueLineBox_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {
#line hidden

        public _Page_Signum_Views_ValueLineBox_cshtml()
        {
        }
        protected System.Web.HttpApplication ApplicationInstance
        {
            get
            {
                return ((System.Web.HttpApplication)(Context.ApplicationInstance));
            }
        }
        public override void Execute()
        {

 using (var e = Html.TypeContext<ValueLineBoxModel>())
{
    if (e.Value.TopText.HasText())
    {
        
   Write(e.Value.TopText);

                         

WriteLiteral("        <div class=\'clearall\'></div>\r\n");


    }
    
Write(Html.HiddenEntityInfo(e, f => f.Related));

                                             ;

WriteLiteral("    <div style=\"display: none\">\r\n    \r\n        ");


   Write(Html.ValueLine(e, f => f.BoxType));

WriteLiteral(";\r\n    </div>\r\n");


    switch (e.Value.BoxType)
    {
        case ValueLineBoxType.Boolean:
            
       Write(Html.ValueLine(e, f => f.BoolValue, vl => vl.LabelText = e.Value.FieldName));

                                                                                        ;
            break;
        case ValueLineBoxType.Integer:
            
       Write(Html.ValueLine(e, f => f.IntValue, vl => vl.LabelText = e.Value.FieldName));

                                                                                       ;
            break;
        case ValueLineBoxType.Decimal:
            
       Write(Html.ValueLine(e, f => f.DecimalValue, vl => vl.LabelText = e.Value.FieldName));

                                                                                           ;
            break;
        case ValueLineBoxType.DateTime:
            
       Write(Html.ValueLine(e, f => f.DateValue, vl => vl.LabelText = e.Value.FieldName));

                                                                                        ;
            break;
        case ValueLineBoxType.String:
            
       Write(Html.ValueLine(e, f => f.StringValue, vl => vl.LabelText = e.Value.FieldName));

                                                                                          ;
            break;
        default:
            throw new InvalidOperationException("ValueLineBoxType {0} does not exist".Formato(e.Value.BoxType));
    }
}
WriteLiteral(" ");


        }
    }
}
