#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Signum.Web.Views
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 3 "..\..\Signum\Views\PaginationSelector.cshtml"
    using Signum.Engine;
    
    #line default
    #line hidden
    using Signum.Entities;
    
    #line 1 "..\..\Signum\Views\PaginationSelector.cshtml"
    using Signum.Entities.DynamicQuery;
    
    #line default
    #line hidden
    
    #line 2 "..\..\Signum\Views\PaginationSelector.cshtml"
    using Signum.Entities.Reflection;
    
    #line default
    #line hidden
    using Signum.Utilities;
    
    #line 4 "..\..\Signum\Views\PaginationSelector.cshtml"
    using Signum.Utilities.DataStructures;
    
    #line default
    #line hidden
    using Signum.Web;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Signum/Views/PaginationSelector.cshtml")]
    public partial class PaginationSelector : System.Web.Mvc.WebViewPage<Context>
    {
        public PaginationSelector()
        {
        }
        public override void Execute()
        {
            
            #line 6 "..\..\Signum\Views\PaginationSelector.cshtml"
   
    Pagination pagination = (Pagination)ViewData[ViewDataKeys.Pagination];
    var paginate = pagination as Pagination.Paginate;

    FilterMode filterMode = (FilterMode)ViewData[ViewDataKeys.FilterMode];
    int columnsCount = (int)ViewData[ViewDataKeys.SearchControlColumnsCount];

    ResultTable resultTable = (ResultTable)ViewData[ViewDataKeys.Results];

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<tr");

WriteLiteral(" class=\"ui-widget-header ui-corner-bottom sf-search-footer\"");

WriteAttribute("style", Tuple.Create(" style=\"", 588), Tuple.Create("\"", 659)
            
            #line 16 "..\..\Signum\Views\PaginationSelector.cshtml"
, Tuple.Create(Tuple.Create("", 596), Tuple.Create<System.Object, System.Int32>(filterMode == FilterMode.OnlyResults ? "display:none" : null
            
            #line default
            #line hidden
, 596), false)
);

WriteLiteral(">\r\n    <td");

WriteAttribute("colspan", Tuple.Create(" colspan=\"", 670), Tuple.Create("\"", 693)
            
            #line 17 "..\..\Signum\Views\PaginationSelector.cshtml"
, Tuple.Create(Tuple.Create("", 680), Tuple.Create<System.Object, System.Int32>(columnsCount
            
            #line default
            #line hidden
, 680), false)
);

WriteLiteral(" class=\"sf-search-footer-pagination\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"sf-pagination-left\"");

WriteLiteral(">\r\n");

            
            #line 19 "..\..\Signum\Views\PaginationSelector.cshtml"
            
            
            #line default
            #line hidden
            
            #line 19 "..\..\Signum\Views\PaginationSelector.cshtml"
             if (resultTable != null)
            {
                if (pagination is Pagination.All)
                {

            
            #line default
            #line hidden
WriteLiteral("                <span>");

            
            #line 23 "..\..\Signum\Views\PaginationSelector.cshtml"
                 Write(SearchMessage._0Results.NiceToString().ForGenderAndNumber(number: resultTable.TotalElements).FormatHtml(
                       new HtmlTag("span").Class("sf-pagination-strong").SetInnerText(resultTable.TotalElements.ToString())));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </span>\r\n");

            
            #line 26 "..\..\Signum\Views\PaginationSelector.cshtml"
                    
                }
                else if (pagination is Pagination.Firsts)
                {
                    var first = (Pagination.Firsts)pagination;
                    

            
            #line default
            #line hidden
WriteLiteral("                <span>");

            
            #line 32 "..\..\Signum\Views\PaginationSelector.cshtml"
                 Write(SearchMessage.First0Results.NiceToString().ForGenderAndNumber(number: resultTable.Rows.Length).FormatHtml(
                    new HtmlTag("span").Class("sf-pagination-strong").Class(resultTable.Rows.Length == first.TopElements ? "sf-pagination-overflow" : null).SetInnerText(resultTable.Rows.Length.ToString())));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </span>\r\n");

            
            #line 35 "..\..\Signum\Views\PaginationSelector.cshtml"
                }
                else if (pagination is Pagination.Paginate)
                {

            
            #line default
            #line hidden
WriteLiteral("                <span>\r\n");

WriteLiteral("                    ");

            
            #line 39 "..\..\Signum\Views\PaginationSelector.cshtml"
               Write(SearchMessage._01of2Results.NiceToString().ForGenderAndNumber(number: resultTable.TotalElements).FormatHtml(
                        new HtmlTag("span").Class("sf-pagination-strong").SetInnerText(resultTable.StartElementIndex.ToString()),
                        new HtmlTag("span").Class("sf-pagination-strong").SetInnerText(resultTable.EndElementIndex.ToString()),
                        new HtmlTag("span").Class("sf-pagination-strong").SetInnerText(resultTable.TotalElements.ToString())
                        ));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </span>\r\n");

            
            #line 45 "..\..\Signum\Views\PaginationSelector.cshtml"
                }
            }

            
            #line default
            #line hidden
WriteLiteral("        </div>\r\n        <div");

WriteLiteral(" class=\"sf-pagination-center\"");

WriteLiteral(">\r\n");

            
            #line 49 "..\..\Signum\Views\PaginationSelector.cshtml"
            
            
            #line default
            #line hidden
            
            #line 49 "..\..\Signum\Views\PaginationSelector.cshtml"
              
                var currentMode = pagination.GetMode();
                var modes = EnumExtensions.GetValues<PaginationMode>().Select(pm => new SelectListItem
                {
                    Text = pm.NiceToString(),
                    Value = pm.ToString(),
                    Selected = currentMode == pm
                }).ToList();   
            
            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("            ");

            
            #line 58 "..\..\Signum\Views\PaginationSelector.cshtml"
       Write(Html.DropDownList(Model.Compose("sfPaginationMode"), modes, new { @class = "sf-pagination-size" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

            
            #line 60 "..\..\Signum\Views\PaginationSelector.cshtml"
            
            
            #line default
            #line hidden
            
            #line 60 "..\..\Signum\Views\PaginationSelector.cshtml"
             if (!(pagination is Pagination.All))
            {
                var currentElements = pagination.GetElementsPerPage();
                var elements = new List<int> { 5, 10, 20, 50, 100, 200 }.Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = i == currentElements }).ToList();
            
                
            
            #line default
            #line hidden
            
            #line 65 "..\..\Signum\Views\PaginationSelector.cshtml"
           Write(Html.DropDownList(Model.Compose("sfElems"), elements, new { @class = "sf-pagination-size" }));

            
            #line default
            #line hidden
            
            #line 65 "..\..\Signum\Views\PaginationSelector.cshtml"
                                                                                                             
            }

            
            #line default
            #line hidden
WriteLiteral("        </div>\r\n\r\n        <div");

WriteLiteral(" class=\"sf-pagination-right\"");

WriteLiteral(">\r\n\r\n");

            
            #line 71 "..\..\Signum\Views\PaginationSelector.cshtml"
            
            
            #line default
            #line hidden
            
            #line 71 "..\..\Signum\Views\PaginationSelector.cshtml"
             if (resultTable != null && paginate != null)
            {
                MinMax<int> interval = new MinMax<int>(
                 Math.Max(1, paginate.CurrentPage - 2),
                 Math.Min(paginate.CurrentPage + 2, resultTable.TotalPages.Value));
                

            
            #line default
            #line hidden
WriteLiteral("                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("id", Tuple.Create(" id=\"", 3896), Tuple.Create("\"", 3927)
            
            #line 77 "..\..\Signum\Views\PaginationSelector.cshtml"
, Tuple.Create(Tuple.Create("", 3901), Tuple.Create<System.Object, System.Int32>(Model.Compose("sfPage")
            
            #line default
            #line hidden
, 3901), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 3928), Tuple.Create("\"", 3957)
            
            #line 77 "..\..\Signum\Views\PaginationSelector.cshtml"
, Tuple.Create(Tuple.Create("", 3936), Tuple.Create<System.Object, System.Int32>(paginate.CurrentPage
            
            #line default
            #line hidden
, 3936), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("                <ul");

WriteLiteral(" class=\"pagination\"");

WriteLiteral(">\r\n                    <li");

WriteAttribute("class", Tuple.Create(" class=\"", 4027), Tuple.Create("\"", 4085)
            
            #line 79 "..\..\Signum\Views\PaginationSelector.cshtml"
, Tuple.Create(Tuple.Create("", 4035), Tuple.Create<System.Object, System.Int32>((paginate.CurrentPage <= 1) ? "disabled" : null
            
            #line default
            #line hidden
, 4035), false)
);

WriteLiteral(" ><a");

WriteLiteral(" data-page=\"");

            
            #line 79 "..\..\Signum\Views\PaginationSelector.cshtml"
                                                                                              Write(paginate.CurrentPage - 1);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" >&laquo;</a></li>\r\n\r\n\r\n\r\n");

            
            #line 83 "..\..\Signum\Views\PaginationSelector.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 83 "..\..\Signum\Views\PaginationSelector.cshtml"
                     if (interval.Min != 1)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <li><a");

WriteLiteral(" data-page=\"1\"");

WriteLiteral(" />1</li>\r\n");

            
            #line 86 "..\..\Signum\Views\PaginationSelector.cshtml"
                        if (interval.Min - 1 != 1)
                        {

            
            #line default
            #line hidden
WriteLiteral("                        <li");

WriteLiteral(" class=\"disabled\"");

WriteLiteral("><span>...</span></li>\r\n");

            
            #line 89 "..\..\Signum\Views\PaginationSelector.cshtml"
                        }
                    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 92 "..\..\Signum\Views\PaginationSelector.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 92 "..\..\Signum\Views\PaginationSelector.cshtml"
                     for (int i = interval.Min; i < paginate.CurrentPage; i++)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <li><a");

WriteLiteral(" data-page=\"");

            
            #line 94 "..\..\Signum\Views\PaginationSelector.cshtml"
                                     Write(i);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" />");

            
            #line 94 "..\..\Signum\Views\PaginationSelector.cshtml"
                                           Write(i);

            
            #line default
            #line hidden
WriteLiteral("</li>  \r\n");

            
            #line 95 "..\..\Signum\Views\PaginationSelector.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("\r\n                    <li");

WriteLiteral(" class=\"active\"");

WriteLiteral("><span>");

            
            #line 97 "..\..\Signum\Views\PaginationSelector.cshtml"
                                        Write(paginate.CurrentPage.ToString());

            
            #line default
            #line hidden
WriteLiteral("</span></li>\r\n\r\n");

            
            #line 99 "..\..\Signum\Views\PaginationSelector.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 99 "..\..\Signum\Views\PaginationSelector.cshtml"
                     for (int i = paginate.CurrentPage + 1; i <= interval.Max; i++)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <li><a");

WriteLiteral(" data-page=\"");

            
            #line 101 "..\..\Signum\Views\PaginationSelector.cshtml"
                                     Write(i);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" />");

            
            #line 101 "..\..\Signum\Views\PaginationSelector.cshtml"
                                           Write(i);

            
            #line default
            #line hidden
WriteLiteral("</li> \r\n");

            
            #line 102 "..\..\Signum\Views\PaginationSelector.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 104 "..\..\Signum\Views\PaginationSelector.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 104 "..\..\Signum\Views\PaginationSelector.cshtml"
                     if (interval.Max != resultTable.TotalPages)
                    {
                        if (interval.Max + 1 != resultTable.TotalPages)
                        {

            
            #line default
            #line hidden
WriteLiteral("                        <li");

WriteLiteral(" class=\"disabled\"");

WriteLiteral("><span>...</span></li> \r\n");

            
            #line 109 "..\..\Signum\Views\PaginationSelector.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                        <li><a");

WriteLiteral(" data-page=\"");

            
            #line 110 "..\..\Signum\Views\PaginationSelector.cshtml"
                                     Write(resultTable.TotalPages);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">");

            
            #line 110 "..\..\Signum\Views\PaginationSelector.cshtml"
                                                              Write(resultTable.TotalPages);

            
            #line default
            #line hidden
WriteLiteral("</a></li> \r\n");

            
            #line 111 "..\..\Signum\Views\PaginationSelector.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("\r\n                    <li");

WriteAttribute("class", Tuple.Create(" class=\"", 5384), Tuple.Create("\"", 5461)
            
            #line 113 "..\..\Signum\Views\PaginationSelector.cshtml"
, Tuple.Create(Tuple.Create("", 5392), Tuple.Create<System.Object, System.Int32>(resultTable.TotalPages <= paginate.CurrentPage ? "disabled" : null
            
            #line default
            #line hidden
, 5392), false)
);

WriteLiteral("><a");

WriteLiteral(" class=\"sf-pagination-button\"");

WriteLiteral(" data-page=\"");

            
            #line 113 "..\..\Signum\Views\PaginationSelector.cshtml"
                                                                                                                                             Write(paginate.CurrentPage + 1);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral("   >&raquo;</a></li>\r\n                </ul>\r\n");

            
            #line 115 "..\..\Signum\Views\PaginationSelector.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </div>\r\n    </td>\r\n</tr>\r\n");

        }
    }
}
#pragma warning restore 1591
