@{ Context context = (Context)Model;}
<div id="@context.Compose("externalPopupDiv")">
    <div id="@context.Compose("modalBackground")" class="transparent popupBackground">
    </div>
    <div id="@context.Compose("panelPopup")" class="popupWindow">
        @if (ViewData[ViewDataKeys.OnCancel] != null)
        {
            <div class="closebox" id="@context.Compose(ViewDataKeys.BtnCancel)" onclick="@ViewData[ViewDataKeys.OnCancel]">
            </div>
        }
        else
        {
            <div class="closebox" id="@context.Compose(ViewDataKeys.BtnCancel)">
            </div>
        }
        <div id="@context.Compose("divPopupDragHandle")" class="dragHandle">
            @{ string pageTitle = (string)ViewData[ViewDataKeys.Title];}
            @if (pageTitle != null)
            { <span class="popupEntityName">@pageTitle</span> }
        </div>
        @ViewData[ViewDataKeys.CustomHtml]
    </div>
</div>
@Html.DynamicJs("~/signum/Scripts/SF_DragAndDrop.js").Callback(@"function () {{
     SF.DragAndDrop(document.getElementById(""{0}""), document.getElementById(""{1}""));}}"
        .Formato(context.Compose("divPopupDragHandle"), context.Compose("panelPopup")))
