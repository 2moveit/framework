#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Signum.Web.Views
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 4 "..\..\Signum\Views\Pagination.cshtml"
    using Signum.Engine;
    
    #line default
    #line hidden
    using Signum.Entities;
    
    #line 1 "..\..\Signum\Views\Pagination.cshtml"
    using Signum.Entities.DynamicQuery;
    
    #line default
    #line hidden
    
    #line 2 "..\..\Signum\Views\Pagination.cshtml"
    using Signum.Entities.Reflection;
    
    #line default
    #line hidden
    using Signum.Utilities;
    
    #line 5 "..\..\Signum\Views\Pagination.cshtml"
    using Signum.Utilities.DataStructures;
    
    #line default
    #line hidden
    using Signum.Web;
    
    #line 3 "..\..\Signum\Views\Pagination.cshtml"
    using Signum.Web.Properties;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.5.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Signum/Views/Pagination.cshtml")]
    public class Pagination : System.Web.Mvc.WebViewPage<Context>
    {
        public Pagination()
        {
        }
        public override void Execute()
        {






WriteLiteral("\r\n");


            
            #line 8 "..\..\Signum\Views\Pagination.cshtml"
   
   int elems = (int)ViewData[ViewDataKeys.ElementsPerPage];
   FilterMode filterMode = (FilterMode)ViewData[ViewDataKeys.FilterMode];
   int columnsCount = (int)ViewData[ViewDataKeys.SearchControlColumnsCount];

   ResultTable resultTable = (ResultTable)ViewData[ViewDataKeys.Results];


            
            #line default
            #line hidden
WriteLiteral("\r\n<tr class=\"ui-widget-header ui-corner-bottom sf-search-footer\" style=\"");


            
            #line 16 "..\..\Signum\Views\Pagination.cshtml"
                                                                  Write((filterMode == FilterMode.OnlyResults) ?  "display:none" : "");

            
            #line default
            #line hidden
WriteLiteral("\">\r\n    <td colspan=\"");


            
            #line 17 "..\..\Signum\Views\Pagination.cshtml"
            Write(columnsCount);

            
            #line default
            #line hidden
WriteLiteral("\" class=\"sf-search-footer-pagination\">\r\n        <div class=\"sf-pagination-left\">\r" +
"\n");


            
            #line 19 "..\..\Signum\Views\Pagination.cshtml"
             if (resultTable != null)
            {
                if (resultTable.TotalPages > 1)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <span class=\"sf-pagination-strong\">");


            
            #line 23 "..\..\Signum\Views\Pagination.cshtml"
                                                  Write(resultTable.StartElementIndex.ToString());

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");



WriteLiteral("                    <span> - </span>\r\n");



WriteLiteral("                    <span class=\"sf-pagination-strong\">");


            
            #line 25 "..\..\Signum\Views\Pagination.cshtml"
                                                  Write(resultTable.EndElementIndex.ToString());

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");



WriteLiteral("                    <span>");


            
            #line 26 "..\..\Signum\Views\Pagination.cshtml"
                      Write(" {0} ".Formato(SearchMessage.SearchControl_Pagination_Of.NiceToString()));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");


            
            #line 27 "..\..\Signum\Views\Pagination.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("                <span class=\"sf-pagination-strong\">");


            
            #line 28 "..\..\Signum\Views\Pagination.cshtml"
                                              Write(resultTable.TotalElements.ToString());

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");



WriteLiteral("                <span>");


            
            #line 29 "..\..\Signum\Views\Pagination.cshtml"
                  Write(" {0}.".Formato(SearchMessage.SearchControl_Pagination_Results.NiceToString()));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");


            
            #line 30 "..\..\Signum\Views\Pagination.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </div>\r\n        <div class=\"sf-pagination-center\">\r\n            <span>");


            
            #line 33 "..\..\Signum\Views\Pagination.cshtml"
             Write(SearchMessage.SearchControl_Pagination_Rows.NiceToString());

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");


            
            #line 34 "..\..\Signum\Views\Pagination.cshtml"
               
                var topItems = new List<int> { 5, 10, 20, 50, 100, 200 }.Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = i.ToString() == elems.TryToString() }).ToList();
                topItems.Add(new SelectListItem { Text = SearchMessage.SearchControl_Pagination_All.NiceToString(), Value = "-1", Selected = elems == -1 });
            

            
            #line default
            #line hidden
WriteLiteral("            ");


            
            #line 38 "..\..\Signum\Views\Pagination.cshtml"
       Write(Html.DropDownList(Model.Compose("sfElems"), topItems, new { @class = "sf-pagination-size" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div class=\"sf-pagination-right\">\r\n");


            
            #line 41 "..\..\Signum\Views\Pagination.cshtml"
             if (resultTable != null)
            {

            
            #line default
            #line hidden
WriteLiteral("                <input type=\"hidden\" id=\"");


            
            #line 43 "..\..\Signum\Views\Pagination.cshtml"
                                     Write(Model.Compose("sfPage"));

            
            #line default
            #line hidden
WriteLiteral("\" value=\"");


            
            #line 43 "..\..\Signum\Views\Pagination.cshtml"
                                                                       Write(resultTable.CurrentPage);

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");



WriteLiteral("                <input type=\"button\" class=\"sf-pagination-button\" data-page=\"");


            
            #line 44 "..\..\Signum\Views\Pagination.cshtml"
                                                                         Write(resultTable.CurrentPage - 1);

            
            #line default
            #line hidden
WriteLiteral("\" ");


            
            #line 44 "..\..\Signum\Views\Pagination.cshtml"
                                                                                                         Write((resultTable.CurrentPage <= 1) ? "disabled=\"disabled\"" : "");

            
            #line default
            #line hidden
WriteLiteral(" value=\"&lt;\" />\r\n");


            
            #line 45 "..\..\Signum\Views\Pagination.cshtml"
            
                MinMax<int> interval = new MinMax<int>(
                    Math.Max(1, resultTable.CurrentPage - 2),
                    Math.Min(resultTable.CurrentPage + 2, resultTable.TotalPages));

                if (interval.Min != 1)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <input type=\"button\" class=\"sf-pagination-button\" data-page=\"" +
"1\" value=\"1\" />\r\n");


            
            #line 53 "..\..\Signum\Views\Pagination.cshtml"
                    if (interval.Min - 1 != 1)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <span>...</span>\r\n");


            
            #line 56 "..\..\Signum\Views\Pagination.cshtml"
                    }
                }

                for (int i = interval.Min; i < resultTable.CurrentPage; i++)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <input type=\"button\" class=\"sf-pagination-button\" data-page=\"" +
"");


            
            #line 61 "..\..\Signum\Views\Pagination.cshtml"
                                                                            Write(i);

            
            #line default
            #line hidden
WriteLiteral("\" value=\"");


            
            #line 61 "..\..\Signum\Views\Pagination.cshtml"
                                                                                       Write(i);

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");


            
            #line 62 "..\..\Signum\Views\Pagination.cshtml"
                }


            
            #line default
            #line hidden
WriteLiteral("                <span class=\"sf-pagination-strong\">");


            
            #line 64 "..\..\Signum\Views\Pagination.cshtml"
                                              Write(resultTable.CurrentPage.ToString());

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");


            
            #line 65 "..\..\Signum\Views\Pagination.cshtml"

                for (int i = resultTable.CurrentPage + 1; i <= interval.Max; i++)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <input type=\"button\" class=\"sf-pagination-button\" data-page=\"" +
"");


            
            #line 68 "..\..\Signum\Views\Pagination.cshtml"
                                                                            Write(i);

            
            #line default
            #line hidden
WriteLiteral("\" value=\"");


            
            #line 68 "..\..\Signum\Views\Pagination.cshtml"
                                                                                       Write(i);

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");


            
            #line 69 "..\..\Signum\Views\Pagination.cshtml"
                }

                if (interval.Max != resultTable.TotalPages)
                {
                    if (interval.Max + 1 != resultTable.TotalPages)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <span>...</span>\r\n");


            
            #line 76 "..\..\Signum\Views\Pagination.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <input type=\"button\" class=\"sf-pagination-button\" data-page=\"" +
"");


            
            #line 77 "..\..\Signum\Views\Pagination.cshtml"
                                                                            Write(resultTable.TotalPages);

            
            #line default
            #line hidden
WriteLiteral("\" value=\"");


            
            #line 77 "..\..\Signum\Views\Pagination.cshtml"
                                                                                                            Write(resultTable.TotalPages);

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");


            
            #line 78 "..\..\Signum\Views\Pagination.cshtml"
                }
            

            
            #line default
            #line hidden
WriteLiteral("                <input type=\"button\" class=\"sf-pagination-button\" data-page=\"");


            
            #line 80 "..\..\Signum\Views\Pagination.cshtml"
                                                                         Write(resultTable.CurrentPage + 1);

            
            #line default
            #line hidden
WriteLiteral("\" ");


            
            #line 80 "..\..\Signum\Views\Pagination.cshtml"
                                                                                                         Write((resultTable.TotalPages <= resultTable.CurrentPage) ? "disabled=\"disabled\"" : "");

            
            #line default
            #line hidden
WriteLiteral(" value=\"&gt;\" />\r\n");


            
            #line 81 "..\..\Signum\Views\Pagination.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </div>\r\n    </td>\r\n</tr>");


        }
    }
}
#pragma warning restore 1591
