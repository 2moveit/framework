<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="vwAIDAgrupadosxAgrupacion" xml:space="preserve">
    <value>create view vwAIDAgrupadosxAgrupacion as SELECT     dbo.tlAgrupApunteImpDDN.ID, dbo.tlAgrupApunteImpDDN.PermiteCompensar, dbo.tlAgrupApunteImpDDN.GUID, dbo.tlApunteImpDDN.ID AS Expr1, 
                      dbo.tlApunteImpDDN.FCreación, dbo.tlApunteImpDDN.FEfecto, dbo.tlApunteImpDDN.FAnulacion, dbo.tlApunteImpDDN.Importe, 
                      dbo.tlApunteImpDDN.GUIDAgrupacion, dbo.tlApunteImpDDN.GUID AS Expr2, 
                      dbo.tlApunteImpDDN.idDeudora, dbo.tlApunteImpDDN.idAcreedora
FROM         dbo.tlAgrupApunteImpDDN INNER JOIN
                      dbo.trtlAgrupApunteImpDDNColApunteImpDDNXtlApunteImpDDN ON 
                      dbo.tlAgrupApunteImpDDN.ID = dbo.trtlAgrupApunteImpDDNColApunteImpDDNXtlApunteImpDDN.idttlAgrupApunteImpDDN INNER JOIN
                      dbo.tlApunteImpDDN ON dbo.trtlAgrupApunteImpDDNColApunteImpDDNXtlApunteImpDDN.idptlApunteImpDDN = dbo.tlApunteImpDDN.ID</value>
  </data>
  <data name="vwAIDAgrupadosxAgrupacion11" xml:space="preserve">
    <value>create view vwAIDAgrupadosxAgrupacion as SELECT     dbo.tlAgrupApunteImpDDN.ID, dbo.tlAgrupApunteImpDDN.PermiteCompensar, dbo.tlAgrupApunteImpDDN.GUID, dbo.tlApunteImpDDN.ID AS Expr1, 
                      dbo.tlApunteImpDDN.FCreación, dbo.tlApunteImpDDN.FEfecto, dbo.tlApunteImpDDN.FAnulacion, dbo.tlApunteImpDDN.Importe, 
                      dbo.tlApunteImpDDN.GUIDAgrupacion, dbo.tlApunteImpDDN.GUID AS Expr2, dbo.tlApunteImpDDN.HuellaIOrigenImpDebDN_GUIDReferida, 
                      dbo.tlApunteImpDDN.idDeudora, dbo.tlApunteImpDDN.idAcreedora
FROM         dbo.tlAgrupApunteImpDDN INNER JOIN
                      dbo.trtlAgrupApunteImpDDNColApunteImpDDNXtlApunteImpDDN ON 
                      dbo.tlAgrupApunteImpDDN.ID = dbo.trtlAgrupApunteImpDDNColApunteImpDDNXtlApunteImpDDN.idttlAgrupApunteImpDDN INNER JOIN
                      dbo.tlApunteImpDDN ON dbo.trtlAgrupApunteImpDDNColApunteImpDDNXtlApunteImpDDN.idptlApunteImpDDN = dbo.tlApunteImpDDN.ID</value>
  </data>
  <data name="vwAIDProductoxAgrupacion" xml:space="preserve">
    <value>create view vwAIDProductoxAgrupacion as SELECT     dbo.tlAgrupApunteImpDDN.ID, dbo.tlAgrupApunteImpDDN.PermiteCompensar, dbo.tlAgrupApunteImpDDN.GUID, 
                       tlApunteImpDDN_1.ID AS idAID, tlApunteImpDDN_1.FCreación, tlApunteImpDDN_1.FEfecto, 
                      tlApunteImpDDN_1.FAnulacion, tlApunteImpDDN_1.Importe, tlApunteImpDDN_1.GUIDAgrupacion, tlApunteImpDDN_1.idDeudora, 
                      tlApunteImpDDN_1.idAcreedora
FROM         dbo.tlAgrupApunteImpDDN INNER JOIN
                      dbo.tlApunteImpDDN AS tlApunteImpDDN_1 ON dbo.tlAgrupApunteImpDDN.idApunteImpDDN = tlApunteImpDDN_1.ID</value>
  </data>
  <data name="vwAIDProductoxAgrupacion11" xml:space="preserve">
    <value>create view vwAIDProductoxAgrupacion as SELECT     dbo.tlAgrupApunteImpDDN.ID, dbo.tlAgrupApunteImpDDN.PermiteCompensar, dbo.tlAgrupApunteImpDDN.GUID, 
                      tlApunteImpDDN_1.HuellaIOrigenImpDebDN_GUIDReferida, tlApunteImpDDN_1.ID AS idAID, tlApunteImpDDN_1.FCreación, tlApunteImpDDN_1.FEfecto, 
                      tlApunteImpDDN_1.FAnulacion, tlApunteImpDDN_1.Importe, tlApunteImpDDN_1.GUIDAgrupacion, tlApunteImpDDN_1.idDeudora, 
                      tlApunteImpDDN_1.idAcreedora
FROM         dbo.tlAgrupApunteImpDDN INNER JOIN
                      dbo.tlApunteImpDDN AS tlApunteImpDDN_1 ON dbo.tlAgrupApunteImpDDN.idApunteImpDDN = tlApunteImpDDN_1.ID</value>
  </data>
  <data name="vwApunteImpD" xml:space="preserve">
    <value>create view vwApunteImpD as  SELECT     dbo.tlApunteImpDDN.ID, dbo.tlApunteImpDDN.FCreación, dbo.tlApunteImpDDN.FEfecto, dbo.tlApunteImpDDN.FAnulacion, dbo.tlApunteImpDDN.Importe, 
                      dbo.tlEntidadFiscalGenericaDN.ToSt AS Acreedora, tlEntidadFiscalGenericaDN_1.ToSt AS Deudora, dbo.tlApunteImpDDN.GUIDAgrupacion
FROM         dbo.tlApunteImpDDN INNER JOIN
                      dbo.tlEntidadFiscalGenericaDN ON dbo.tlApunteImpDDN.idAcreedora = dbo.tlEntidadFiscalGenericaDN.ID INNER JOIN
                      dbo.tlEntidadFiscalGenericaDN AS tlEntidadFiscalGenericaDN_1 ON dbo.tlApunteImpDDN.idDeudora = tlEntidadFiscalGenericaDN_1.ID</value>
  </data>
  <data name="vwApunteImpDebHuellaOrigen" xml:space="preserve">
    <value>create view vwApunteImpDebHuellaOrigen as 
SELECT     ID, FCreación, FEfecto, FAnulacion, Importe
FROM         dbo.tlApunteImpDDN</value>
  </data>
  <data name="vwApunteImpDebHuellaOrigen1111" xml:space="preserve">
    <value>create view vwApunteImpDebHuellaOrigen111 as 
SELECT     ID, FCreación, FEfecto, FAnulacion, Importe, HuellaIOrigenImpDebDN_IdEntidadReferida, HuellaIOrigenImpDebDN_GUIDReferida, 
                      HuellaIOrigenImpDebDN_TipoEntidadReferidaFullName
FROM         dbo.tlApunteImpDDN AS tlApunteImpDDN_1</value>
  </data>
  <data name="vwImpDebSumaImportePagos" xml:space="preserve">
    <value>create view vwImpDebSumaImportePagos as SELECT     idApunteImpDOrigen, SUM(ImportePago) AS importePagos, Importe, idDeudor, idDestinatario
FROM         dbo.vwPagosOrigenImpDeb
WHERE     (FAnulacion IS NULL) AND (FechaAnulacion IS NULL)
GROUP BY idApunteImpDOrigen, idDestinatario, idDeudor, Importe</value>
  </data>
  <data name="vwImpDebSumaImportePagosCompenadores" xml:space="preserve">
    <value>create view vwImpDebSumaImportePagosCompenadores as SELECT     idApunteImpDOrigen, SUM(ImportePago) AS importePagos, Importe, idDeudor, idDestinatario
FROM         dbo.vwPagosOrigenImpDeb
WHERE     (FAnulacion IS NULL) AND (FechaAnulacion IS NULL) AND (FechaEfecto IS NULL) AND (FechaEfectoEsperada &lt; GETDATE() OR
                      FechaEfectoEsperada IS NULL) AND (idPagoCompensado IS NOT NULL)
GROUP BY idApunteImpDOrigen, idDeudor, idDestinatario, Importe</value>
  </data>
  <data name="vwImportesDebidosIncidentados" xml:space="preserve">
    <value>create view vwImportesDebidosIncidentados as SELECT     idApunteImpDOrigen AS idID, 'Importe debido Descompensado' AS comentario
FROM         dbo.vwImportesDebidosNoCubiertosConPagos
WHERE     (Descuadre &lt;&gt; 0)
UNION
SELECT     idApunteImpDOrigen AS idid, 'Pago no efectuado en fecha' AS comentario
FROM         dbo.vwPagosNoEfectuadosEnFechaEsperada</value>
  </data>
  <data name="vwImportesDebidosNoCubiertosConPagos" xml:space="preserve">
    <value>create view vwImportesDebidosNoCubiertosConPagos as SELECT     dbo.vwImpDebSumaImportePagos.idApunteImpDOrigen, dbo.vwImpDebSumaImportePagos.idDeudor, 
                      dbo.vwImpDebSumaImportePagos.idDestinatario, dbo.vwImpDebSumaImportePagos.Importe AS importeID, 
                      dbo.vwImpDebSumaImportePagos.importePagos, vwImpDebSumaImportePagos_1.importePagos AS ImportePagosCompensadores, 
                      CASE WHEN vwImpDebSumaImportePagos_1.importePagos IS NULL 
                      THEN dbo.vwImpDebSumaImportePagos.Importe - dbo.vwImpDebSumaImportePagos.importePagos ELSE CASE WHEN dbo.vwImpDebSumaImportePagos.importePagos
                       &gt; vwImpDebSumaImportePagos_1.importePagos THEN dbo.vwImpDebSumaImportePagos.Importe - (dbo.vwImpDebSumaImportePagos.importePagos -
                       vwImpDebSumaImportePagos_1.importePagos) 
                      ELSE dbo.vwImpDebSumaImportePagos.Importe - (vwImpDebSumaImportePagos_1.importePagos - dbo.vwImpDebSumaImportePagos.importePagos) 
                      END END AS Descuadre
FROM         dbo.vwImpDebSumaImportePagos LEFT OUTER JOIN
                      dbo.vwImpDebSumaImportePagos AS vwImpDebSumaImportePagos_1 ON 
                      dbo.vwImpDebSumaImportePagos.idDestinatario = vwImpDebSumaImportePagos_1.idDeudor AND 
                      dbo.vwImpDebSumaImportePagos.idDeudor = vwImpDebSumaImportePagos_1.idDestinatario AND 
                      dbo.vwImpDebSumaImportePagos.idApunteImpDOrigen = vwImpDebSumaImportePagos_1.idApunteImpDOrigen</value>
  </data>
  <data name="vwLiquidacionAIDPago" xml:space="preserve">
    <value>create view vwLiquidacionAIDPago as SELECT     dbo.tlLiquidacionPagoDN.idIImporteDebidoDNApunteImpDDN, dbo.tlApunteImpDDN.FCreación AS fcAID, dbo.tlApunteImpDDN.FEfecto AS feAID, 
                      dbo.tlApunteImpDDN.FAnulacion AS faAID, dbo.tlApunteImpDDN.Importe AS ImpAID, dbo.tlApunteImpDDN.Baja AS BajaAID, 
                      dbo.tlLiquidacionPagoDN.ID AS idLQ, dbo.tlLiquidacionPagoDN.FAnulacion, dbo.tlLiquidacionPagoDN.Baja AS Expr1, dbo.tlLiquidacionPagoDN.idpago, 
                      dbo.tlPagoDN.ImportePago, dbo.tlPagoDN.FechaProgramadaEmision, dbo.tlPagoDN.FechaEmision, dbo.tlPagoDN.FechaEfecto, 
                      dbo.tlPagoDN.FechaAnulacion
FROM         dbo.tlApunteImpDDN INNER JOIN
                      dbo.tlLiquidacionPagoDN ON dbo.tlApunteImpDDN.ID = dbo.tlLiquidacionPagoDN.idIImporteDebidoDNApunteImpDDN INNER JOIN
                      dbo.tlPagoDN ON dbo.tlLiquidacionPagoDN.idpago = dbo.tlPagoDN.ID</value>
  </data>
  <data name="vwLiquidacionApidPago" xml:space="preserve">
    <value>create view  vwLiquidacionApidPago as

SELECT     dbo.tlLiquidacionPagoDN.ID, dbo.tlLiquidacionPagoDN.idpago, dbo.tlLiquidacionPagoDN.idLiquidacionCompensada, 
                      dbo.tlLiquidacionPagoDN.FAnulacion, dbo.tlLiquidacionPagoDN.idIImporteDebidoDNApunteImpDDN, dbo.tlApunteImpDDN.Importe, 
                      dbo.tlPagoDN.ID AS IdPagoAp, dbo.tlPagoDN.ImportePago AS ImpPagoAp, dbo.tlPagoDN.FechaEmision AS femiPagoAp, 
                      dbo.tlPagoDN.FechaAnulacion AS faPagoAp, tlEntidadFiscalGenericaDN_1.ToSt AS Deudora, dbo.tlEntidadFiscalGenericaDN.ToSt AS Acreedora
FROM         dbo.tlLiquidacionPagoDN INNER JOIN
                      dbo.tlApunteImpDDN ON dbo.tlLiquidacionPagoDN.idIImporteDebidoDNApunteImpDDN = dbo.tlApunteImpDDN.ID INNER JOIN
                      dbo.tlEntidadFiscalGenericaDN ON dbo.tlApunteImpDDN.idAcreedora = dbo.tlEntidadFiscalGenericaDN.ID INNER JOIN
                      dbo.tlEntidadFiscalGenericaDN AS tlEntidadFiscalGenericaDN_1 ON 
                      dbo.tlApunteImpDDN.idDeudora = tlEntidadFiscalGenericaDN_1.ID LEFT OUTER JOIN
                      dbo.tlPagoDN ON dbo.tlApunteImpDDN.ID = dbo.tlPagoDN.idApunteImpDOrigen</value>
  </data>
  <data name="vwLiquidacionesXPago" xml:space="preserve">
    <value>create view vwLiquidacionesXPago as SELECT     dbo.tlLiquidacionPagoDN.ID, dbo.tlPagoDN.ID AS idPago, dbo.tlPagoDN.ImportePago, dbo.tlPagoDN.FechaEfecto AS fePago, 
                      dbo.tlPagoDN.FechaAnulacion AS faPago, dbo.tlApunteImpDDN.FCreación AS fcID, dbo.tlApunteImpDDN.FEfecto AS feID, 
                      dbo.tlApunteImpDDN.FAnulacion AS faID, dbo.tlApunteImpDDN.Importe, dbo.tlEntidadFiscalGenericaDN.ToSt AS Acreedora, 
                      tlEntidadFiscalGenericaDN_1.ToSt AS Deudora
FROM         dbo.tlEntidadFiscalGenericaDN INNER JOIN
                      dbo.tlApunteImpDDN ON dbo.tlEntidadFiscalGenericaDN.ID = dbo.tlApunteImpDDN.idAcreedora INNER JOIN
                      dbo.tlEntidadFiscalGenericaDN AS tlEntidadFiscalGenericaDN_1 ON 
                      dbo.tlApunteImpDDN.idDeudora = tlEntidadFiscalGenericaDN_1.ID RIGHT OUTER JOIN
                      dbo.tlLiquidacionPagoDN ON dbo.tlApunteImpDDN.ID = dbo.tlLiquidacionPagoDN.idIImporteDebidoDNApunteImpDDN LEFT OUTER JOIN
                      dbo.tlPagoDN ON dbo.tlLiquidacionPagoDN.idpago = dbo.tlPagoDN.ID</value>
  </data>
  <data name="vwLiquidadorConcretoOrigenIDMapDN" xml:space="preserve">
    <value>create view  vwLiquidadorConcretoOrigenIDMapDN as


SELECT     dbo.tlLiquidadorConcretoOrigenIDMapDN.ID, dbo.tlLiquidadorConcretoOrigenIDMapDN.Periodo_FInicio, 
                      dbo.tlLiquidadorConcretoOrigenIDMapDN.Periodo_FFinal, dbo.tlLiquidadorConcretoOrigenIDMapDN.Baja, 
                      dbo.tlVinculoClaseDN.NombreClase AS NombreClaseOrigen, tlVinculoClaseDN_1.NombreClase, 
                      dbo.tlLiquidadorConcretoOrigenIDMapDN.idVCOrigenImpdev, dbo.tlLiquidadorConcretoOrigenIDMapDN.idVCLiquidadorConcreto
FROM         dbo.tlLiquidadorConcretoOrigenIDMapDN INNER JOIN
                      dbo.tlVinculoClaseDN ON dbo.tlLiquidadorConcretoOrigenIDMapDN.idVCOrigenImpdev = dbo.tlVinculoClaseDN.ID INNER JOIN
                      dbo.tlVinculoClaseDN AS tlVinculoClaseDN_1 ON dbo.tlLiquidadorConcretoOrigenIDMapDN.idVCLiquidadorConcreto = tlVinculoClaseDN_1.ID</value>
  </data>
  <data name="vwPagosNoEfectuadosEnFechaEsperada" xml:space="preserve">
    <value>create view vwPagosNoEfectuadosEnFechaEsperada as SELECT     ID, FAnulacion AS faid, FechaEfectoEsperada, FechaEfecto, FechaAnulacion AS faPago, idApunteImpDOrigen
FROM         dbo.vwPagosOrigenImpDeb
WHERE     (FAnulacion IS NULL) AND (FechaAnulacion IS NULL) AND (FechaEfecto IS NULL) AND (FechaEfectoEsperada &lt; GETDATE() OR
                      FechaEfectoEsperada IS NULL)</value>
  </data>
  <data name="vwPagosOrigenImpDeb" xml:space="preserve">
    <value>create view vwPagosOrigenImpDeb as 

SELECT     dbo.tlPagoDN.ID, dbo.tlPagoDN.ImportePago, dbo.tlPagoDN.FechaProgramadaEmision, dbo.tlPagoDN.FechaEmision, 
                      dbo.tlPagoDN.FechaEfectoEsperada, dbo.tlPagoDN.FechaEfecto, dbo.tlPagoDN.FechaAnulacion, dbo.tlPagoDN.idApunteImpDOrigen, 
                      dbo.tlApunteImpDDN.Importe, dbo.tlApunteImpDDN.FCreación, dbo.tlApunteImpDDN.FEfecto, dbo.tlApunteImpDDN.FAnulacion, 
                      dbo.tlPagoDN.idApunteImpDProducto, dbo.tlPagoDN.idDeudor, dbo.tlPagoDN.idDestinatario, dbo.tlPagoDN.idPagoCompensado, 
                      dbo.tlHuellaIOrigenImpDebDN.IdEntidadReferida, dbo.tlHuellaIOrigenImpDebDN.GUIDReferida
FROM         dbo.tlPagoDN INNER JOIN
                      dbo.tlApunteImpDDN ON dbo.tlPagoDN.idApunteImpDOrigen = dbo.tlApunteImpDDN.ID INNER JOIN
                      dbo.tlHuellaIOrigenImpDebDN ON dbo.tlApunteImpDDN.idHuellaIOrigenImpDebDN = dbo.tlHuellaIOrigenImpDebDN.GUID</value>
  </data>
  <data name="vwPagosOrigenPago" xml:space="preserve">
    <value>Create View vwPagosOrigenPago as SELECT     dbo.tlPagoDN.ID, dbo.tlPagoDN.ImportePago, dbo.tlPagoDN.FechaProgramadaEmision, dbo.tlPagoDN.FechaEmision, dbo.tlPagoDN.FechaEfecto, 
                      dbo.tlPagoDN.FechaAnulacion, dbo.tlPagoDN.idPagoCompensado, tlPagoDN_1.ImportePago AS impO, tlPagoDN_1.FechaProgramadaEmision AS fpeO, 
                      tlPagoDN_1.FechaEmision AS femiO, tlPagoDN_1.FechaEfecto AS fefecO, tlPagoDN_1.FechaAnulacion AS faO, dbo.tlPagoDN.GUID, 
                      tlPagoDN_1.GUID AS GUIDPagoCompensado, dbo.tlPagoDN.Baja
FROM         dbo.tlPagoDN INNER JOIN
                      dbo.tlPagoDN AS tlPagoDN_1 ON dbo.tlPagoDN.idPagoCompensado = tlPagoDN_1.ID</value>
  </data>
</root>