<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="uwModuladores" xml:space="preserve">
    <value>create view uwModuladores  as
SELECT     dbo.tlModuladorRVSVDN.ID, dbo.tlModuladorRVSVDN.Nombre, dbo.tlModuladorRVDN.ID AS idModuladorRV, 
                      dbo.tlModuladorRVDN.Nombre AS moduladorRV, dbo.tlModuladorDN.Nombre AS ModuladorCaract, dbo.tlCaracteristicaDN.Nombre AS Caracteristica, 
                      dbo.tlCoberturaDN.Nombre AS cobertura, dbo.tlValorIntervalNumMapDN.Valor, dbo.tlValorIntervalNumMapDN.Periodo_FFinal, 
                      dbo.tlValorIntervalNumMapDN.Periodo_FInicio
FROM         dbo.tlModuladorRVDN INNER JOIN
                      dbo.trtlModuladorRVSVDNColModuladorRVXtlModuladorRVDN ON 
                      dbo.tlModuladorRVDN.ID = dbo.trtlModuladorRVSVDNColModuladorRVXtlModuladorRVDN.idptlModuladorRVDN INNER JOIN
                      dbo.tlModuladorDN ON dbo.tlModuladorRVDN.idModulador = dbo.tlModuladorDN.ID INNER JOIN
                      dbo.trtlModuladorRVDNColValorIntervalNumMapDNXtlValorIntervalNumMapDN ON 
                      dbo.tlModuladorRVDN.ID = dbo.trtlModuladorRVDNColValorIntervalNumMapDNXtlValorIntervalNumMapDN.idttlModuladorRVDN INNER JOIN
                      dbo.tlValorIntervalNumMapDN ON 
                      dbo.trtlModuladorRVDNColValorIntervalNumMapDNXtlValorIntervalNumMapDN.idptlValorIntervalNumMapDN = dbo.tlValorIntervalNumMapDN.ID RIGHT OUTER
                       JOIN
                      dbo.tlCaracteristicaDN INNER JOIN
                      dbo.tlCoberturaDN INNER JOIN
                      dbo.tlModuladorRVSVDN ON dbo.tlCoberturaDN.ID = dbo.tlModuladorRVSVDN.idCobertura ON 
                      dbo.tlCaracteristicaDN.ID = dbo.tlModuladorRVSVDN.idCaracteristica ON 
                      dbo.trtlModuladorRVSVDNColModuladorRVXtlModuladorRVDN.idttlModuladorRVSVDN = dbo.tlModuladorRVSVDN.ID</value>
  </data>
  <data name="uwTarifaImpuestos" xml:space="preserve">
    <value>create view  uwImpuestosTarifa as SELECT     NombreCobertura, NombreImpuesto, ValorImpuesto, ValorPrimaNeta, ValorresultadoOpr, TipoOperador, Aplicado, GUIDTarifa, Nombre
FROM         dbo.tlOperacionImpuestoRVCacheDN</value>
  </data>
  <data name="uwTarifaModuladores" xml:space="preserve">
    <value>create view uwTarifaModuladores as SELECT     ID, ValorresultadoISVprecedente, ValorresultadoModulador, ValorresultadoOpr, NombreCobertura, NombreModulador, NombreCaracteristica, 
                      NombreCategoria, TipoOperador, Aplicado, GUIDTarifa
FROM         dbo.tlOperacionModuladorRVCacheDN</value>
  </data>
  <data name="uwTarifaPrimasBase" xml:space="preserve">
    <value>create view uwTarifaPrimasBase as SELECT     ID, ValorPrimabase, ValorOperacion, NombreCobertura, NombreCategoria, TipoOperador, Nombre, GUIDTarifa
FROM         dbo.tlOperacionPrimaBaseRVCacheDN</value>
  </data>
  <data name="vwAIDxPCxPR" xml:space="preserve">
    <value>create view vwAIDxPCxPR as 

SELECT     dbo.vwApunteImpD.ID, dbo.vwApunteImpD.FCreación, dbo.vwApunteImpD.FEfecto, dbo.vwApunteImpD.FAnulacion, dbo.vwApunteImpD.Importe, 
                      dbo.vwApunteImpD.Deudora, dbo.vwApunteImpD.Acreedora, dbo.vwApunteImpD.GUIDAgrupacion, dbo.tlPeriodoRenovacionPolizaDN.idPoliza, 
                      dbo.tlPeriodoRenovacionPolizaDN.ID AS idPR, dbo.tlPeriodoRenovacionPolizaDN.Periodo_FInicio AS fiPR, 
                      dbo.tlPeriodoRenovacionPolizaDN.Periodo_FFinal AS ffPR, dbo.tlPeriodoRenovacionPolizaDN.FechaBaja AS fbPR, 
                      dbo.tlPeriodoCoberturaDN.ID AS idPC, dbo.tlPeriodoCoberturaDN.Periodo_FInicio AS fiPC, dbo.tlPeriodoCoberturaDN.Periodo_FFinal AS ffPC
FROM         dbo.tlPeriodoRenovacionPolizaDN INNER JOIN
                      dbo.tlPeriodoCoberturaDN ON dbo.tlPeriodoRenovacionPolizaDN.idPeriodoCoberturaActivo = dbo.tlPeriodoCoberturaDN.ID INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaOidDN ON dbo.tlPeriodoCoberturaDN.ID = dbo.tlPeriodoRenovacionPolizaOidDN.idPeriodoCobertura INNER JOIN
                      dbo.vwApunteImpD ON dbo.tlPeriodoRenovacionPolizaOidDN.idIImporteDebidoApunteImpDDN = dbo.vwApunteImpD.ID</value>
  </data>
  <data name="vwCategoriaModeloMarca" xml:space="preserve">
    <value>CREATE VIEW vwCategoriaModeloMarca AS
SELECT     dbo.tlModeloDatosDN.ID, dbo.tlCategoriaDN.Nombre AS Categoria, dbo.tlModeloDatosDN.Matriculado, dbo.tlMarcaDN.Nombre AS Marca, 
                      dbo.tlModeloDN.Nombre AS Modelo, dbo.tlModeloDatosDN.Periodo_FInicio AS FIModeloDatos, dbo.tlModeloDatosDN.Periodo_FFinal AS FFModeloDatos, 
                      dbo.tlCategoriaDN.ID AS idCategoria, dbo.tlCategoriaDN.GUID AS GUIDCategoria, dbo.tlModeloDatosDN.Baja AS BajaModeloDatos, 
                      dbo.tlModeloDN.ID AS idModelo
FROM         dbo.tlModeloDN INNER JOIN
                      dbo.tlMarcaDN ON dbo.tlModeloDN.idMarca = dbo.tlMarcaDN.ID INNER JOIN
                      dbo.tlCategoriaDN INNER JOIN
                      dbo.tlCategoriaModDatosDN ON dbo.tlCategoriaDN.ID = dbo.tlCategoriaModDatosDN.idCategoria INNER JOIN
                      dbo.tlModeloDatosDN ON dbo.tlCategoriaDN.ID = dbo.tlModeloDatosDN.idCategoria ON dbo.tlModeloDN.ID = dbo.tlModeloDatosDN.idModelo INNER JOIN
                      dbo.trtlCategoriaModDatosDNColModelosDatosXtlModeloDatosDN ON 
                      dbo.tlCategoriaModDatosDN.ID = dbo.trtlCategoriaModDatosDNColModelosDatosXtlModeloDatosDN.idttlCategoriaModDatosDN AND 
                      dbo.tlModeloDatosDN.ID = dbo.trtlCategoriaModDatosDNColModelosDatosXtlModeloDatosDN.idptlModeloDatosDN</value>
  </data>
  <data name="vwCDxTarifa" xml:space="preserve">
    <value>create view vwCDxTarifa as SELECT     dbo.tlCajonDocumentoDN.ID, dbo.tlCajonDocumentoDN.FechaVerificacon, dbo.tlCajonDocumentoDN.idDocumento, dbo.tlTarifaDN.ID AS idTarifa
FROM         dbo.trtlCajonDocumentoDNHuellasEntidadesReferidasXtlHuellaEntidadReferidaCajonDocumentoDN INNER JOIN
                      dbo.tlCajonDocumentoDN ON 
                      dbo.trtlCajonDocumentoDNHuellasEntidadesReferidasXtlHuellaEntidadReferidaCajonDocumentoDN.idttlCajonDocumentoDN = dbo.tlCajonDocumentoDN.ID INNER JOIN
                      dbo.tlTarifaDN ON 
                      dbo.trtlCajonDocumentoDNHuellasEntidadesReferidasXtlHuellaEntidadReferidaCajonDocumentoDN.idptlHuellaEntidadReferidaCajonDocumentoDN = dbo.tlTarifaDN.GUID</value>
  </data>
  <data name="vwDatosPolizaVehiculosXPago" xml:space="preserve">
    <value>create view  vwDatosPolizaVehiculosXPago as

SELECT     dbo.tlPeriodoRenovacionPolizaOidDN.idDatosPolizaVehiculos, dbo.tlPagoDN.ID AS idPago
FROM         dbo.tlPagoDN INNER JOIN
                      dbo.tlApunteImpDDN ON dbo.tlPagoDN.idApunteImpDOrigen = dbo.tlApunteImpDDN.ID INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaOidDN ON dbo.tlApunteImpDDN.ID = dbo.tlPeriodoRenovacionPolizaOidDN.idIImporteDebidoApunteImpDDN</value>
  </data>
  <data name="vwEntidadesColaboradorasIDS" xml:space="preserve">
    <value>create view vwEntidadesColaboradorasIDS as 


SELECT     dbo.tlEntidadColaboradoraDN.ID, dbo.tlEntidadColaboradoraDN.CodigoColaborador, dbo.tlEmpleadoDN.ID AS idEmpleado, 
                      dbo.tlEmpleadoDN.NIFPersona, dbo.tlEmpleadoDN.CIFNIFEmpresa, dbo.tlEmpleadoDN.GUID AS guidEmpleado, dbo.tlEmpresaDN.ID AS idEmpresa, 
                      dbo.tlEmpresaDN.CIFNIF, dbo.tlEmpresaDN.GUID AS guidEmpresa, dbo.tlSedeEmpresaDN.ID AS idSede, dbo.tlSedeEmpresaDN.GUID AS guidSede, 
                      dbo.tlSedeEmpresaDN.idTipoSede
FROM         dbo.tlEntidadColaboradoraDN INNER JOIN
                      dbo.tlEmpleadoDN ON dbo.tlEntidadColaboradoraDN.idEntidadAsociadaEmpleadoDN = dbo.tlEmpleadoDN.ID INNER JOIN
                      dbo.tlEmpresaDN ON dbo.tlEntidadColaboradoraDN.idEntidadAsociadaEmpresaDN = dbo.tlEmpresaDN.ID INNER JOIN
                      dbo.tlSedeEmpresaDN ON dbo.tlEntidadColaboradoraDN.idEntidadAsociadaSedeEmpresaDN = dbo.tlSedeEmpresaDN.ID</value>
  </data>
  <data name="vwLiquidacionesxCobertura" xml:space="preserve">
    <value>create view vwLiquidacionesxCobertura as SELECT     dbo.tlCoberturaDN.ID AS idCob, dbo.tlCoberturaDN.Nombre, dbo.vwLiquidacionApidPago.ID, dbo.vwLiquidacionApidPago.idpago, 
                      dbo.vwLiquidacionApidPago.FAnulacion, dbo.vwLiquidacionApidPago.idIImporteDebidoDNApunteImpDDN, dbo.vwLiquidacionApidPago.Importe, 
                      dbo.vwLiquidacionApidPago.IdPagoAp, dbo.vwLiquidacionApidPago.ImpPagoAp, dbo.vwLiquidacionApidPago.femiPagoAp, 
                      dbo.vwLiquidacionApidPago.faPagoAp, dbo.vwLiquidacionApidPago.idLiquidacionCompensada
FROM         dbo.trtlLiquidacionPagoDNColHeCausasXtlHEDN INNER JOIN
                      dbo.tlHEDN ON dbo.trtlLiquidacionPagoDNColHeCausasXtlHEDN.idptlHEDN = dbo.tlHEDN.GUID INNER JOIN
                      dbo.tlCoberturaDN ON dbo.tlHEDN.GUIDReferida = dbo.tlCoberturaDN.GUID INNER JOIN
                      dbo.vwLiquidacionApidPago ON dbo.trtlLiquidacionPagoDNColHeCausasXtlHEDN.idttlLiquidacionPagoDN = dbo.vwLiquidacionApidPago.ID</value>
  </data>
  <data name="vwLiquidacionesxComision" xml:space="preserve">
    <value>create view vwLiquidacionesxComision as SELECT     dbo.vwLiquidacionApidPago.ID, dbo.vwLiquidacionApidPago.idpago, dbo.vwLiquidacionApidPago.FAnulacion, 
                      dbo.vwLiquidacionApidPago.idIImporteDebidoDNApunteImpDDN, dbo.vwLiquidacionApidPago.Importe, dbo.vwLiquidacionApidPago.IdPagoAp, 
                      dbo.vwLiquidacionApidPago.ImpPagoAp, dbo.vwLiquidacionApidPago.femiPagoAp, dbo.vwLiquidacionApidPago.faPagoAp, 
                      dbo.vwLiquidacionApidPago.idLiquidacionCompensada, dbo.tlComisionDN.ID AS idComi, dbo.tlComisionDN.Nombre
FROM         dbo.trtlLiquidacionPagoDNColHeCausasXtlHEDN INNER JOIN
                      dbo.tlHEDN ON dbo.trtlLiquidacionPagoDNColHeCausasXtlHEDN.idptlHEDN = dbo.tlHEDN.GUID INNER JOIN
                      dbo.vwLiquidacionApidPago ON dbo.trtlLiquidacionPagoDNColHeCausasXtlHEDN.idttlLiquidacionPagoDN = dbo.vwLiquidacionApidPago.ID INNER JOIN
                      dbo.tlComisionDN ON dbo.tlHEDN.GUIDReferida = dbo.tlComisionDN.GUID</value>
  </data>
  <data name="vwLiquidacionesxImpuesto" xml:space="preserve">
    <value>create view vwLiquidacionesxImpuesto as SELECT     dbo.vwLiquidacionApidPago.ID, dbo.vwLiquidacionApidPago.idpago, dbo.vwLiquidacionApidPago.FAnulacion, 
                      dbo.vwLiquidacionApidPago.idIImporteDebidoDNApunteImpDDN, dbo.vwLiquidacionApidPago.Importe, dbo.vwLiquidacionApidPago.IdPagoAp, 
                      dbo.vwLiquidacionApidPago.ImpPagoAp, dbo.vwLiquidacionApidPago.femiPagoAp, dbo.vwLiquidacionApidPago.faPagoAp, 
                      dbo.vwLiquidacionApidPago.idLiquidacionCompensada, dbo.tlImpuestoDN.ID AS idImpuesto, dbo.tlImpuestoDN.Nombre
FROM         dbo.trtlLiquidacionPagoDNColHeCausasXtlHEDN INNER JOIN
                      dbo.tlHEDN ON dbo.trtlLiquidacionPagoDNColHeCausasXtlHEDN.idptlHEDN = dbo.tlHEDN.GUID INNER JOIN
                      dbo.vwLiquidacionApidPago ON dbo.trtlLiquidacionPagoDNColHeCausasXtlHEDN.idttlLiquidacionPagoDN = dbo.vwLiquidacionApidPago.ID INNER JOIN
                      dbo.tlImpuestoDN ON dbo.tlHEDN.GUIDReferida = dbo.tlImpuestoDN.GUID</value>
  </data>
  <data name="vwLiquidacionxCausaxAIDxPago" xml:space="preserve">
    <value>create view  vwLiquidacionxCausaxAIDxPago as

SELECT     dbo.vwLiquidacionApidPago.ID, dbo.tlHEDN.ToSt, dbo.vwLiquidacionApidPago.Importe, dbo.vwLiquidacionApidPago.FAnulacion, 
                      dbo.vwLiquidacionApidPago.Deudora, dbo.vwLiquidacionApidPago.Acreedora, dbo.vwLiquidacionApidPago.idpago, 
                      dbo.vwLiquidacionApidPago.idIImporteDebidoDNApunteImpDDN, dbo.vwLiquidacionApidPago.IdPagoAp, dbo.vwLiquidacionApidPago.ImpPagoAp, 
                      dbo.vwLiquidacionApidPago.femiPagoAp, dbo.vwLiquidacionApidPago.faPagoAp, dbo.vwLiquidacionApidPago.idLiquidacionCompensada, 
                      dbo.tlPeriodoRenovacionPolizaOidDN.idPoliza
FROM         dbo.tlPagoDN INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaOidDN ON 
                      dbo.tlPagoDN.idApunteImpDOrigen = dbo.tlPeriodoRenovacionPolizaOidDN.idIImporteDebidoApunteImpDDN INNER JOIN
                      dbo.trtlLiquidacionPagoDNColHeCausasXtlHEDN INNER JOIN
                      dbo.tlHEDN ON dbo.trtlLiquidacionPagoDNColHeCausasXtlHEDN.idptlHEDN = dbo.tlHEDN.GUID INNER JOIN
                      dbo.vwLiquidacionApidPago ON dbo.trtlLiquidacionPagoDNColHeCausasXtlHEDN.idttlLiquidacionPagoDN = dbo.vwLiquidacionApidPago.ID ON 
                      dbo.tlPagoDN.ID = dbo.vwLiquidacionApidPago.idpago</value>
  </data>
  <data name="vwNotasPresupuesto" xml:space="preserve">
    <value>create view vwNotasPresupuesto as SELECT     dbo.tlNotaDN.ID, dbo.tlNotaDN.Nombre, dbo.tlNotaDN.Comentario, dbo.tlUsuarioDN.Nombre AS Usuario, dbo.tlPresupuestoDN.ID AS idp
FROM         dbo.tlNotaDN INNER JOIN
                      dbo.trtlNotaDNColHEntidadXtlHEDN ON dbo.tlNotaDN.ID = dbo.trtlNotaDNColHEntidadXtlHEDN.idttlNotaDN INNER JOIN
                      dbo.tlPresupuestoDN ON dbo.trtlNotaDNColHEntidadXtlHEDN.idptlHEDN = dbo.tlPresupuestoDN.GUID INNER JOIN
                      dbo.tlUsuarioDN ON dbo.tlNotaDN.idCreador = dbo.tlUsuarioDN.ID</value>
  </data>
  <data name="vwPagosPrimerPeridoRenovacion" xml:space="preserve">
    <value>create view vwPagosPrimerPeridoRenovacion as 

SELECT     dbo.tlPagoDN.ID AS id, dbo.tlPeriodoRenovacionPolizaOidDN.ID AS idPr, dbo.tlPeriodoRenovacionPolizaDN.Periodo_FInicio, dbo.tlPolizaDN.FechaAlta,
                       dbo.tlPolizaDN.ID AS idPol
FROM         dbo.tlPagoDN INNER JOIN
                      dbo.tlApunteImpDDN ON dbo.tlPagoDN.idApunteImpDOrigen = dbo.tlApunteImpDDN.ID INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaOidDN ON dbo.tlApunteImpDDN.ID = dbo.tlPeriodoRenovacionPolizaOidDN.idIImporteDebidoApunteImpDDN INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaDN ON 
                      dbo.tlPeriodoRenovacionPolizaOidDN.idPeriodoRenovacionPoliza = dbo.tlPeriodoRenovacionPolizaDN.ID INNER JOIN
                      dbo.tlPolizaDN ON dbo.tlPeriodoRenovacionPolizaDN.idPoliza = dbo.tlPolizaDN.ID AND 
                      dbo.tlPeriodoRenovacionPolizaDN.Periodo_FInicio = dbo.tlPolizaDN.FechaAlta</value>
  </data>
  <data name="vwPagosxAIDXPCxPRxPol" xml:space="preserve">
    <value>create view vwPagosxAIDXPCxPRxPol as

SELECT     dbo.vwPagosOrigenImpDeb.ID, dbo.vwPagosOrigenImpDeb.ImportePago, dbo.vwPagosOrigenImpDeb.FCreación, 
                      dbo.vwPagosOrigenImpDeb.FechaProgramadaEmision, dbo.vwPagosOrigenImpDeb.FechaEmision, dbo.vwPagosOrigenImpDeb.FechaEfectoEsperada, 
                      dbo.vwPagosOrigenImpDeb.FechaEfecto, dbo.vwPagosOrigenImpDeb.FechaAnulacion, dbo.tlPeriodoRenovacionPolizaOidDN.idPoliza, 
                      dbo.tlPeriodoRenovacionPolizaOidDN.idPeriodoRenovacionPoliza, dbo.tlPeriodoRenovacionPolizaOidDN.idPeriodoCobertura, 
                      dbo.vwPagosOrigenImpDeb.idApunteImpDOrigen, dbo.vwPagosOrigenImpDeb.Importe
FROM         dbo.vwPagosOrigenImpDeb INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaOidDN ON 
                      dbo.vwPagosOrigenImpDeb.idApunteImpDOrigen = dbo.tlPeriodoRenovacionPolizaOidDN.idIImporteDebidoApunteImpDDN</value>
  </data>
  <data name="vwPagosxLiqXPeridoRenovacion" xml:space="preserve">
    <value>create view vwPagosxLiqXPeridoRenovacion as  SELECT     tlPagoDN_1.ID, tlPagoDN_1.ImportePago, tlPagoDN_1.FechaAnulacion AS faPago, dbo.tlApunteImpDDN.idDeudora, dbo.tlApunteImpDDN.idAcreedora, 
                      dbo.tlPeriodoRenovacionPolizaOidDN.idPeriodoRenovacionPoliza AS idPR, dbo.tlPeriodoRenovacionPolizaOidDN.ID AS idOrigenAID, 
                      dbo.tlPeriodoRenovacionPolizaOidDN.FAnulacion AS faOrigenAID, tlApunteImpDDN_1.ID AS idAID, dbo.tlPagoDN.ID AS idPagoOrigen, 
                      dbo.tlLiquidacionPagoDN.ID AS idLiq, dbo.tlApunteImpDDN.ID AS idAIDLiq, dbo.tlPeriodoRenovacionPolizaOidDN.idPeriodoCobertura AS idPC, 
                      dbo.tlPeriodoRenovacionPolizaDN.idPoliza AS idPol, dbo.tlPeriodoRenovacionPolizaDN.Periodo_FInicio, dbo.tlPolizaDN.FechaAlta
FROM         dbo.tlApunteImpDDN AS tlApunteImpDDN_1 INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaOidDN ON tlApunteImpDDN_1.ID = dbo.tlPeriodoRenovacionPolizaOidDN.idIImporteDebidoApunteImpDDN INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaDN ON 
                      dbo.tlPeriodoRenovacionPolizaOidDN.idPeriodoRenovacionPoliza = dbo.tlPeriodoRenovacionPolizaDN.ID INNER JOIN
                      dbo.tlPolizaDN ON dbo.tlPeriodoRenovacionPolizaDN.idPoliza = dbo.tlPolizaDN.ID LEFT OUTER JOIN
                      dbo.tlPagoDN RIGHT OUTER JOIN
                      dbo.tlLiquidacionPagoDN ON dbo.tlPagoDN.ID = dbo.tlLiquidacionPagoDN.idpago ON 
                      tlApunteImpDDN_1.ID = dbo.tlPagoDN.idApunteImpDOrigen LEFT OUTER JOIN
                      dbo.tlApunteImpDDN RIGHT OUTER JOIN
                      dbo.tlPagoDN AS tlPagoDN_1 ON dbo.tlApunteImpDDN.ID = tlPagoDN_1.idApunteImpDOrigen ON 
                      dbo.tlLiquidacionPagoDN.idIImporteDebidoDNApunteImpDDN = dbo.tlApunteImpDDN.ID</value>
  </data>
  <data name="vwPagosxPoliza" xml:space="preserve">
    <value>create view vwPagosxPoliza as SELECT     dbo.tlPeriodoRenovacionPolizaDN.ID, dbo.tlPolizaDN.NumeroPoliza, dbo.tlPeriodoRenovacionPolizaDN.Periodo_FInicio, 
                      dbo.tlPeriodoRenovacionPolizaDN.Periodo_FFinal, dbo.tlApunteImpDDN.ID AS idID, dbo.tlApunteImpDDN.FCreación, dbo.tlApunteImpDDN.FEfecto, 
                      dbo.tlApunteImpDDN.FAnulacion, dbo.tlApunteImpDDN.Importe, dbo.tlPagoDN.ID AS idPago, dbo.tlPagoDN.FechaProgramadaEmision, 
                      dbo.tlPagoDN.FechaEmision, dbo.tlPagoDN.FechaEfecto, dbo.tlPagoDN.FechaAnulacion, dbo.tlPagoDN.ImportePago
FROM         dbo.tlApunteImpDDN INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaOidDN ON 
                      dbo.tlApunteImpDDN.ID = dbo.tlPeriodoRenovacionPolizaOidDN.idIImporteDebidoApunteImpDDN RIGHT OUTER JOIN
                      dbo.tlPolizaDN INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaDN ON dbo.tlPolizaDN.ID = dbo.tlPeriodoRenovacionPolizaDN.idPoliza ON 
                      dbo.tlPeriodoRenovacionPolizaOidDN.idPeriodoRenovacionPoliza = dbo.tlPeriodoRenovacionPolizaDN.ID LEFT OUTER JOIN
                      dbo.tlPagoDN ON dbo.tlApunteImpDDN.ID = dbo.tlPagoDN.idApunteImpDOrigen</value>
  </data>
  <data name="vwPagosxPolizaImpagados" xml:space="preserve">
    <value>CREATE VIEW vwPagosxPolizaImpagados AS
SELECT     ID, FechaProgramadaEmision, FechaEmision, FechaEfecto, FechaAnulacion, ImportePago, NumeroPoliza, idPol, idPeriodoRenovacion
FROM         dbo.vwPagosxPolizaSimple
WHERE     (FechaProgramadaEmision &lt; GETDATE()) AND (FechaEfecto IS NULL) AND (FechaAnulacion IS NULL)</value>
  </data>
  <data name="vwPagoxApunteIDxOrigenID" xml:space="preserve">
    <value>create view vwPagoxApunteIDxOrigenID as SELECT     dbo.tlPagoDN.ID, dbo.tlApunteImpDDN.FAnulacion AS faImpD, dbo.tlPeriodoRenovacionPolizaOidDN.idPeriodoRenovacionPoliza, 
                      dbo.tlPagoDN.ImportePago, dbo.tlPagoDN.FechaAnulacion AS faPago, dbo.tlPagoDN.FechaEfecto AS fePago, 
                      dbo.tlPagoDN.FechaEmision AS femiPago
FROM         dbo.tlApunteImpDDN INNER JOIN
                      dbo.tlPagoDN ON dbo.tlApunteImpDDN.ID = dbo.tlPagoDN.idApunteImpDOrigen INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaOidDN ON dbo.tlApunteImpDDN.ID = dbo.tlPeriodoRenovacionPolizaOidDN.idIImporteDebidoApunteImpDDN</value>
  </data>
  <data name="vwPolizasConImpDebIncidentados" xml:space="preserve">
    <value>create view vwPolizasConImpDebIncidentados as SELECT     dbo.tlPeriodoRenovacionPolizaDN.ID AS idPR, dbo.tlPolizaDN.ID AS idPoliza, dbo.tlPolizaDN.NumeroPoliza, 
                      dbo.vwImportesDebidosIncidentados.comentario
FROM         dbo.vwImportesDebidosIncidentados INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaOidDN ON 
                      dbo.vwImportesDebidosIncidentados.idID = dbo.tlPeriodoRenovacionPolizaOidDN.idIImporteDebidoApunteImpDDN INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaDN ON 
                      dbo.tlPeriodoRenovacionPolizaOidDN.idPeriodoRenovacionPoliza = dbo.tlPeriodoRenovacionPolizaDN.ID INNER JOIN
                      dbo.tlPolizaDN ON dbo.tlPeriodoRenovacionPolizaDN.idPoliza = dbo.tlPolizaDN.ID</value>
  </data>
  <data name="vwPolizasxPresupuesto" xml:space="preserve">
    <value>create view vwPolizasxPresupuesto as SELECT     dbo.tlPeriodoRenovacionPolizaDN.ID, dbo.tlPresupuestoDN.ID AS idPresupuesto, dbo.tlPolizaDN.NumeroPoliza, dbo.tlPeriodoRenovacionPolizaDN.FCreacion
FROM         dbo.tlPeriodoCoberturaDN INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaDN INNER JOIN
                      dbo.tlPolizaDN ON dbo.tlPeriodoRenovacionPolizaDN.idPoliza = dbo.tlPolizaDN.ID ON 
                      dbo.tlPeriodoCoberturaDN.ID = dbo.tlPeriodoRenovacionPolizaDN.idPeriodoCoberturaActivo INNER JOIN
                      dbo.tlPresupuestoDN INNER JOIN
                      dbo.tlTarifaDN ON dbo.tlPresupuestoDN.idTarifa = dbo.tlTarifaDN.ID ON dbo.tlPeriodoCoberturaDN.idTarifa = dbo.tlTarifaDN.ID</value>
  </data>
  <data name="vwPolizaVis" xml:space="preserve">
    <value>create view vwPolizaVis as SELECT     dbo.tlPeriodoRenovacionPolizaDN.ID AS id, dbo.tlPolizaDN.ID AS idPoliza, dbo.tlPolizaDN.NumeroPoliza, 
                      dbo.tlPeriodoRenovacionPolizaDN.FCreacion, dbo.tlPeriodoRenovacionPolizaDN.Periodo_FInicio, dbo.tlPeriodoRenovacionPolizaDN.Periodo_FFinal, 
                      dbo.tlTarifaDN.Importe, dbo.tlTomadorDN.ToSt AS Tomador, dbo.tlTomadorDN.NoRenovacion, dbo.tlTomadorDN.Vetado, dbo.tlTomadorDN.EsImpago, 
                       dbo.tlRiesgoMotorDN.ToSt AS Riesgo, dbo.tlPolizaDN.GUID AS guidPoliza
FROM         dbo.tlPeriodoCoberturaDN INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaDN INNER JOIN
                      dbo.tlPolizaDN ON dbo.tlPeriodoRenovacionPolizaDN.idPoliza = dbo.tlPolizaDN.ID ON 
                      dbo.tlPeriodoCoberturaDN.ID = dbo.tlPeriodoRenovacionPolizaDN.idPeriodoCoberturaActivo INNER JOIN
                      dbo.tlTarifaDN ON dbo.tlPeriodoCoberturaDN.idTarifa = dbo.tlTarifaDN.ID INNER JOIN
                      dbo.tlTomadorDN ON dbo.tlPolizaDN.idTomador = dbo.tlTomadorDN.ID INNER JOIN
                      dbo.tlRiesgoMotorDN ON dbo.tlTarifaDN.idRiesgoRiesgoMotorDN = dbo.tlRiesgoMotorDN.ID</value>
  </data>
  <data name="vwPresupuestos" xml:space="preserve">
    <value>Create view vwPresupuestos as  SELECT     dbo.tlPresupuestoDN.ID, dbo.tlRiesgoMotorDN.Cilindrada, dbo.tlMarcaDN.Nombre, 
                      dbo.tlModeloDN.Nombre AS Expr1
FROM         dbo.tlPresupuestoDN INNER JOIN
                      dbo.tlTarifaDN ON dbo.tlPresupuestoDN.idTarifa = dbo.tlTarifaDN.ID INNER JOIN
                      dbo.tlRiesgoMotorDN ON dbo.tlTarifaDN.idRiesgoRiesgoMotorDN = dbo.tlRiesgoMotorDN.ID INNER JOIN
                      dbo.tlModeloDN ON dbo.tlRiesgoMotorDN.idModelo = dbo.tlModeloDN.ID INNER JOIN
                      dbo.tlMarcaDN ON dbo.tlModeloDN.idMarca = dbo.tlMarcaDN.ID</value>
  </data>
  <data name="vwPresupuestoVis" xml:space="preserve">
    <value>create view vwPresupuestoVis as  SELECT     dbo.tlPresupuestoDN.ID, dbo.tlTarifaDN.FEfecto, dbo.tlRiesgoMotorDN.ToSt AS Riesgo, dbo.tlRiesgoMotorDN.Cilindrada, 
                      dbo.tlFuturoTomadorDN.Nombre, dbo.tlFuturoTomadorDN.Apellido1FuturoTomador AS Apellido1, 
                      dbo.tlFuturoTomadorDN.Apellido2FuturoTomador AS Apellido2, dbo.tlFuturoTomadorDN.NIFCIFFuturoTomador AS [Nif/Cif]
FROM         dbo.tlRiesgoMotorDN INNER JOIN
                      dbo.tlTarifaDN INNER JOIN
                      dbo.tlPresupuestoDN ON dbo.tlTarifaDN.ID = dbo.tlPresupuestoDN.idTarifa ON 
                      dbo.tlRiesgoMotorDN.ID = dbo.tlTarifaDN.idRiesgoRiesgoMotorDN INNER JOIN
                      dbo.tlFuturoTomadorDN ON dbo.tlPresupuestoDN.idFuturoTomador = dbo.tlFuturoTomadorDN.ID</value>
  </data>
  <data name="vwRiesgoMotoActivos" xml:space="preserve">
    <value>create view vwRiesgoMotoActivos as SELECT     dbo.tlRiesgoMotorDN.ID, dbo.tlMatriculaDN.ValorMatricula, dbo.tlRiesgoMotorDN.NumeroBastidor
FROM         dbo.tlRiesgoMotorDN INNER JOIN
                      dbo.tlMatriculaDN ON dbo.tlRiesgoMotorDN.idMatricula = dbo.tlMatriculaDN.ID INNER JOIN
                      dbo.tlTarifaDN ON dbo.tlRiesgoMotorDN.ID = dbo.tlTarifaDN.idRiesgoRiesgoMotorDN INNER JOIN
                      dbo.tlPeriodoCoberturaDN ON dbo.tlTarifaDN.ID = dbo.tlPeriodoCoberturaDN.idTarifa
WHERE     (NOT (dbo.tlPeriodoCoberturaDN.Periodo_FInicio IS NULL)) AND (dbo.tlPeriodoCoberturaDN.Periodo_FFinal IS NULL)</value>
  </data>
  <data name="vwRiesgoMotorXPeridorenovacion" xml:space="preserve">
    <value>Create View vwRiesgoMotorXPeridorenovacion as  SELECT     dbo.tlRiesgoMotorDN.ID AS idRM, dbo.tlRiesgoMotorDN.GUID AS guidRM, dbo.tlRiesgoMotorDN.Cilindrada, dbo.tlRiesgoMotorDN.ValorMatricula, 
                      dbo.tlRiesgoMotorDN.NumeroBastidor, dbo.tlRiesgoMotorDN.Matriculado, dbo.tlPeriodoRenovacionPolizaDN.ID AS idPR, 
                      dbo.tlPeriodoRenovacionPolizaDN.GUID AS guidPR, dbo.tlPeriodoRenovacionPolizaDN.Periodo_FInicio, dbo.tlPeriodoRenovacionPolizaDN.FechaBaja, 
                      dbo.tlPeriodoRenovacionPolizaDN.Periodo_FFinal, dbo.tlPeriodoRenovacionPolizaDN.Baja
FROM         dbo.tlRiesgoMotorDN INNER JOIN
                      dbo.tlTarifaDN ON dbo.tlRiesgoMotorDN.ID = dbo.tlTarifaDN.idRiesgoRiesgoMotorDN INNER JOIN
                      dbo.tlPeriodoCoberturaDN ON dbo.tlTarifaDN.ID = dbo.tlPeriodoCoberturaDN.idTarifa INNER JOIN
                      dbo.trtlPeriodoRenovacionPolizaDNColPeriodosCoberturaXtlPeriodoCoberturaDN ON 
                      dbo.tlPeriodoCoberturaDN.ID = dbo.trtlPeriodoRenovacionPolizaDNColPeriodosCoberturaXtlPeriodoCoberturaDN.idptlPeriodoCoberturaDN INNER JOIN
                      dbo.tlPeriodoRenovacionPolizaDN ON 
                      dbo.trtlPeriodoRenovacionPolizaDNColPeriodosCoberturaXtlPeriodoCoberturaDN.idttlPeriodoRenovacionPolizaDN = dbo.tlPeriodoRenovacionPolizaDN.ID</value>
  </data>
</root>