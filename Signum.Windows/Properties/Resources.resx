<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note:</value>
  </data>
  <data name="_1Error" xml:space="preserve">
    <value>1 Error: {0}</value>
  </data>
  <data name="_0Errors1" xml:space="preserve">
    <value>{0} Errors: {1}</value>
  </data>
  <data name="NullValueNotAllowed" xml:space="preserve">
    <value>Null value not allowed</value>
  </data>
  <data name="NoFilterSelected" xml:space="preserve">
    <value>No filter selected</value>
  </data>
  <data name="NoAdminControlFor0" xml:space="preserve">
    <value>There is no AdminControl for {0}</value>
  </data>
  <data name="Column" xml:space="preserve">
    <value>Column</value>
  </data>
  <data name="CreateNew" xml:space="preserve">
    <value>Create new</value>
  </data>
  <data name="Find" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="NewFilter" xml:space="preserve">
    <value>New Filter</value>
  </data>
  <data name="Operation" xml:space="preserve">
    <value>Operation</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="ViewSelected" xml:space="preserve">
    <value>View Selected</value>
  </data>
  <data name="MoveDown" xml:space="preserve">
    <value>Move down</value>
  </data>
  <data name="MoveUp" xml:space="preserve">
    <value>Move up</value>
  </data>
  <data name="OpenFile" xml:space="preserve">
    <value>Open File</value>
  </data>
  <data name="SaveFile" xml:space="preserve">
    <value>Save File</value>
  </data>
  <data name="ViewFile" xml:space="preserve">
    <value>View File</value>
  </data>
  <data name="DragHorizontallyAndVertically" xml:space="preserve">
    <value>Drag Horizontally and Vertically</value>
  </data>
  <data name="ThereAreChangesContinue" xml:space="preserve">
    <value>There are new changes that will be lost.

	Continue?</value>
  </data>
  <data name="ThereAreChanges" xml:space="preserve">
    <value>There are changes</value>
  </data>
  <data name="ImpossibleToSaveIntegrityCheckFailed" xml:space="preserve">
    <value>Imposisible to Save, integrity check failed:

</value>
  </data>
  <data name="ThereAreErrors" xml:space="preserve">
    <value>There are errors</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>There are changes that hasn't been saved

	Save changes?</value>
  </data>
  <data name="NoChanges" xml:space="preserve">
    <value>There are no changes</value>
  </data>
  <data name="NoChangeHaveBeenFound" xml:space="preserve">
    <value>No changes has been found</value>
  </data>
  <data name="Administration0" xml:space="preserve">
    <value>Administration {0}</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="Filters" xml:space="preserve">
    <value>Filters</value>
  </data>
  <data name="Links" xml:space="preserve">
    <value>Links</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="NewNote" xml:space="preserve">
    <value>New Note</value>
  </data>
  <data name="FinderOf0" xml:space="preserve">
    <value>Finder of {0}</value>
  </data>
  <data name="Finder" xml:space="preserve">
    <value>Finder</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="PleaseSelectAType" xml:space="preserve">
    <value>Please select one of the following types: </value>
  </data>
  <data name="TypeSelector" xml:space="preserve">
    <value>Type Selector</value>
  </data>
  <data name="InvalidFormat" xml:space="preserve">
    <value>Invalid format</value>
  </data>
  <data name="InvalidDateFormat" xml:space="preserve">
    <value>Invalid date format</value>
  </data>
  <data name="Results" xml:space="preserve">
    <value>Results.</value>
  </data>
  <data name="Limitation" xml:space="preserve">
    <value>Limitation:</value>
  </data>
  <data name="Field" xml:space="preserve">
    <value>Field</value>
  </data>
  <data name="Alert" xml:space="preserve">
    <value>Alert</value>
  </data>
  <data name="NewAlert" xml:space="preserve">
    <value>New Alert</value>
  </data>
  <data name="RelatedEntity" xml:space="preserve">
    <value>Related Entity</value>
  </data>
  <data name="Alerts" xml:space="preserve">
    <value>Alerts</value>
  </data>
  <data name="CheckedAlerts" xml:space="preserve">
    <value>Checked</value>
  </data>
  <data name="WarnedAlerts" xml:space="preserve">
    <value>Warned</value>
  </data>
  <data name="FutureAlerts" xml:space="preserve">
    <value>Futures</value>
  </data>
  <data name="ThereIsNo0" xml:space="preserve">
    <value>There is no {0}</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="SelectAnElement" xml:space="preserve">
    <value>Select an element</value>
  </data>
  <data name="Query0NotAllowed" xml:space="preserve">
    <value>Query {0} is not allowed</value>
  </data>
  <data name="Query0NotRegistered" xml:space="preserve">
    <value>Query {0} is not registered in the DynamicQueryManager</value>
  </data>
  <data name="AConnectionWithTheServerIsNecessaryToContinue" xml:space="preserve">
    <value>A connection with the server is necessary to continue</value>
  </data>
  <data name="EntitiesOfType0AreNotVisibleFromA1Window" xml:space="preserve">
    <value>Entities of type {0} are not visible from a {1} window</value>
  </data>
  <data name="Call0First" xml:space="preserve">
    <value>Call {0} first</value>
  </data>
  <data name="ChooseAValue" xml:space="preserve">
    <value>Choose a value</value>
  </data>
  <data name="PleaseChooseAValueToContinue" xml:space="preserve">
    <value>Please, choose a value to continue:</value>
  </data>
  <data name="_note" xml:space="preserve">
    <value>note</value>
  </data>
  <data name="_notes" xml:space="preserve">
    <value>notes</value>
  </data>
  <data name="NewColumn" xml:space="preserve">
    <value>New Column</value>
  </data>
  <data name="LoseChanges" xml:space="preserve">
    <value>There are changes that hasn't been saved. 
Lose changes?</value>
  </data>
  <data name="The0HasErrors1" xml:space="preserve">
    <value>The {0} has errors: 
{1}</value>
  </data>
  <data name="FixErrors" xml:space="preserve">
    <value>Fix Errors</value>
  </data>
  <data name="ContinueWithErrors" xml:space="preserve">
    <value>Continue with errors?</value>
  </data>
  <data name="ContinueAnyway" xml:space="preserve">
    <value>Continue anyway?</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="NewColumnSName" xml:space="preserve">
    <value>New Column's Name</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ChooseTheDisplayNameOfTheNewColumn" xml:space="preserve">
    <value>Choose the display name of the new column</value>
  </data>
  <data name="NoDirectErrors" xml:space="preserve">
    <value>No direct errors</value>
  </data>
  <data name="SessionExpired" xml:space="preserve">
    <value>Sesion Expired</value>
  </data>
  <data name="RestoreAll" xml:space="preserve">
    <value>Restore all</value>
  </data>
  <data name="PageSize" xml:space="preserve">
    <value>Page size:</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
</root>