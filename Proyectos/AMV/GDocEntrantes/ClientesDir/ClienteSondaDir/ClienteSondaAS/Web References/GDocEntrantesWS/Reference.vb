'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.1318
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1318.
'
Namespace GDocEntrantesWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="GDocEntrantesWSSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class GDocEntrantesWS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private RecuperarOperacionActivaPorEntidadNegocioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcesarColComandoOperacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FicheroIncidentadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AltaDocumentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RecuperarColTipoCanalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RecuperarNumDocPendientesClasificaryPostClasificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RecuperarArbolTiposEntNegocioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GuardarArbolTiposEntNegocioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RecuperarOperacionAProcesarClasificarEntradaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RecuperarOperacionAProcesarPostClasificarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RecuperarOperacionEnCursoParaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IncidentarOperacionEnRelacionENFicheroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AnularOperacionEnRelacionENFicheroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RechazarOperacionEnRelacionENFicheroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ClasificarOperacionEnRelacionENFicheroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ClasificarYCerrarOperacionEnRelacionENFicheroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GuardarOperacionEnRelacionENFicheroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutorizadoConfigurarClienteSondaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RecuperarOperacionxIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RecuperarRelacionEnFicheroXIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.ClienteSondaAS.My.MySettings.Default.ClienteSondaAS_GDocEntrantesWS_GDocEntrantesWS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event RecuperarOperacionActivaPorEntidadNegocioCompleted As RecuperarOperacionActivaPorEntidadNegocioCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcesarColComandoOperacionCompleted As ProcesarColComandoOperacionCompletedEventHandler
        
        '''<remarks/>
        Public Event FicheroIncidentadoCompleted As FicheroIncidentadoCompletedEventHandler
        
        '''<remarks/>
        Public Event AltaDocumentoCompleted As AltaDocumentoCompletedEventHandler
        
        '''<remarks/>
        Public Event RecuperarColTipoCanalCompleted As RecuperarColTipoCanalCompletedEventHandler
        
        '''<remarks/>
        Public Event RecuperarNumDocPendientesClasificaryPostClasificacionCompleted As RecuperarNumDocPendientesClasificaryPostClasificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event RecuperarArbolTiposEntNegocioCompleted As RecuperarArbolTiposEntNegocioCompletedEventHandler
        
        '''<remarks/>
        Public Event GuardarArbolTiposEntNegocioCompleted As GuardarArbolTiposEntNegocioCompletedEventHandler
        
        '''<remarks/>
        Public Event RecuperarOperacionAProcesarClasificarEntradaCompleted As RecuperarOperacionAProcesarClasificarEntradaCompletedEventHandler
        
        '''<remarks/>
        Public Event RecuperarOperacionAProcesarPostClasificarCompleted As RecuperarOperacionAProcesarPostClasificarCompletedEventHandler
        
        '''<remarks/>
        Public Event RecuperarOperacionEnCursoParaCompleted As RecuperarOperacionEnCursoParaCompletedEventHandler
        
        '''<remarks/>
        Public Event IncidentarOperacionEnRelacionENFicheroCompleted As IncidentarOperacionEnRelacionENFicheroCompletedEventHandler
        
        '''<remarks/>
        Public Event AnularOperacionEnRelacionENFicheroCompleted As AnularOperacionEnRelacionENFicheroCompletedEventHandler
        
        '''<remarks/>
        Public Event RechazarOperacionEnRelacionENFicheroCompleted As RechazarOperacionEnRelacionENFicheroCompletedEventHandler
        
        '''<remarks/>
        Public Event ClasificarOperacionEnRelacionENFicheroCompleted As ClasificarOperacionEnRelacionENFicheroCompletedEventHandler
        
        '''<remarks/>
        Public Event ClasificarYCerrarOperacionEnRelacionENFicheroCompleted As ClasificarYCerrarOperacionEnRelacionENFicheroCompletedEventHandler
        
        '''<remarks/>
        Public Event GuardarOperacionEnRelacionENFicheroCompleted As GuardarOperacionEnRelacionENFicheroCompletedEventHandler
        
        '''<remarks/>
        Public Event AutorizadoConfigurarClienteSondaCompleted As AutorizadoConfigurarClienteSondaCompletedEventHandler
        
        '''<remarks/>
        Public Event RecuperarOperacionxIDCompleted As RecuperarOperacionxIDCompletedEventHandler
        
        '''<remarks/>
        Public Event RecuperarRelacionEnFicheroXIDCompleted As RecuperarRelacionEnFicheroXIDCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecuperarOperacionActivaPorEntidadNegocio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecuperarOperacionActivaPorEntidadNegocio(ByVal pIDEntidadNegocio As String, ByVal pmnensaje As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("RecuperarOperacionActivaPorEntidadNegocio", New Object() {pIDEntidadNegocio, pmnensaje})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecuperarOperacionActivaPorEntidadNegocioAsync(ByVal pIDEntidadNegocio As String, ByVal pmnensaje As String)
            Me.RecuperarOperacionActivaPorEntidadNegocioAsync(pIDEntidadNegocio, pmnensaje, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecuperarOperacionActivaPorEntidadNegocioAsync(ByVal pIDEntidadNegocio As String, ByVal pmnensaje As String, ByVal userState As Object)
            If (Me.RecuperarOperacionActivaPorEntidadNegocioOperationCompleted Is Nothing) Then
                Me.RecuperarOperacionActivaPorEntidadNegocioOperationCompleted = AddressOf Me.OnRecuperarOperacionActivaPorEntidadNegocioOperationCompleted
            End If
            Me.InvokeAsync("RecuperarOperacionActivaPorEntidadNegocio", New Object() {pIDEntidadNegocio, pmnensaje}, Me.RecuperarOperacionActivaPorEntidadNegocioOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecuperarOperacionActivaPorEntidadNegocioOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecuperarOperacionActivaPorEntidadNegocioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecuperarOperacionActivaPorEntidadNegocioCompleted(Me, New RecuperarOperacionActivaPorEntidadNegocioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcesarColComandoOperacion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcesarColComandoOperacion(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pColComandoOperacionDN() As Byte) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("ProcesarColComandoOperacion", New Object() {pColComandoOperacionDN})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcesarColComandoOperacionAsync(ByVal pColComandoOperacionDN() As Byte)
            Me.ProcesarColComandoOperacionAsync(pColComandoOperacionDN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcesarColComandoOperacionAsync(ByVal pColComandoOperacionDN() As Byte, ByVal userState As Object)
            If (Me.ProcesarColComandoOperacionOperationCompleted Is Nothing) Then
                Me.ProcesarColComandoOperacionOperationCompleted = AddressOf Me.OnProcesarColComandoOperacionOperationCompleted
            End If
            Me.InvokeAsync("ProcesarColComandoOperacion", New Object() {pColComandoOperacionDN}, Me.ProcesarColComandoOperacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcesarColComandoOperacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcesarColComandoOperacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcesarColComandoOperacionCompleted(Me, New ProcesarColComandoOperacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FicheroIncidentado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub FicheroIncidentado(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pDatosIdentidad() As Byte, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pDatosFicheroIncidentado() As Byte)
            Me.Invoke("FicheroIncidentado", New Object() {pDatosIdentidad, pDatosFicheroIncidentado})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FicheroIncidentadoAsync(ByVal pDatosIdentidad() As Byte, ByVal pDatosFicheroIncidentado() As Byte)
            Me.FicheroIncidentadoAsync(pDatosIdentidad, pDatosFicheroIncidentado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FicheroIncidentadoAsync(ByVal pDatosIdentidad() As Byte, ByVal pDatosFicheroIncidentado() As Byte, ByVal userState As Object)
            If (Me.FicheroIncidentadoOperationCompleted Is Nothing) Then
                Me.FicheroIncidentadoOperationCompleted = AddressOf Me.OnFicheroIncidentadoOperationCompleted
            End If
            Me.InvokeAsync("FicheroIncidentado", New Object() {pDatosIdentidad, pDatosFicheroIncidentado}, Me.FicheroIncidentadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnFicheroIncidentadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.FicheroIncidentadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FicheroIncidentadoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AltaDocumento", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AltaDocumento(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pDatosIdentidad() As Byte, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pFicheroParaAlta() As Byte)
            Me.Invoke("AltaDocumento", New Object() {pDatosIdentidad, pFicheroParaAlta})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaDocumentoAsync(ByVal pDatosIdentidad() As Byte, ByVal pFicheroParaAlta() As Byte)
            Me.AltaDocumentoAsync(pDatosIdentidad, pFicheroParaAlta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaDocumentoAsync(ByVal pDatosIdentidad() As Byte, ByVal pFicheroParaAlta() As Byte, ByVal userState As Object)
            If (Me.AltaDocumentoOperationCompleted Is Nothing) Then
                Me.AltaDocumentoOperationCompleted = AddressOf Me.OnAltaDocumentoOperationCompleted
            End If
            Me.InvokeAsync("AltaDocumento", New Object() {pDatosIdentidad, pFicheroParaAlta}, Me.AltaDocumentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltaDocumentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltaDocumentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltaDocumentoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecuperarColTipoCanal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecuperarColTipoCanal() As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("RecuperarColTipoCanal", New Object(-1) {})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecuperarColTipoCanalAsync()
            Me.RecuperarColTipoCanalAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecuperarColTipoCanalAsync(ByVal userState As Object)
            If (Me.RecuperarColTipoCanalOperationCompleted Is Nothing) Then
                Me.RecuperarColTipoCanalOperationCompleted = AddressOf Me.OnRecuperarColTipoCanalOperationCompleted
            End If
            Me.InvokeAsync("RecuperarColTipoCanal", New Object(-1) {}, Me.RecuperarColTipoCanalOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecuperarColTipoCanalOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecuperarColTipoCanalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecuperarColTipoCanalCompleted(Me, New RecuperarColTipoCanalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecuperarNumDocPendientesClasificaryPostClasificacion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecuperarNumDocPendientesClasificaryPostClasificacion() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RecuperarNumDocPendientesClasificaryPostClasificacion", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecuperarNumDocPendientesClasificaryPostClasificacionAsync()
            Me.RecuperarNumDocPendientesClasificaryPostClasificacionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecuperarNumDocPendientesClasificaryPostClasificacionAsync(ByVal userState As Object)
            If (Me.RecuperarNumDocPendientesClasificaryPostClasificacionOperationCompleted Is Nothing) Then
                Me.RecuperarNumDocPendientesClasificaryPostClasificacionOperationCompleted = AddressOf Me.OnRecuperarNumDocPendientesClasificaryPostClasificacionOperationCompleted
            End If
            Me.InvokeAsync("RecuperarNumDocPendientesClasificaryPostClasificacion", New Object(-1) {}, Me.RecuperarNumDocPendientesClasificaryPostClasificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecuperarNumDocPendientesClasificaryPostClasificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecuperarNumDocPendientesClasificaryPostClasificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecuperarNumDocPendientesClasificaryPostClasificacionCompleted(Me, New RecuperarNumDocPendientesClasificaryPostClasificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecuperarArbolTiposEntNegocio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecuperarArbolTiposEntNegocio() As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("RecuperarArbolTiposEntNegocio", New Object(-1) {})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecuperarArbolTiposEntNegocioAsync()
            Me.RecuperarArbolTiposEntNegocioAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecuperarArbolTiposEntNegocioAsync(ByVal userState As Object)
            If (Me.RecuperarArbolTiposEntNegocioOperationCompleted Is Nothing) Then
                Me.RecuperarArbolTiposEntNegocioOperationCompleted = AddressOf Me.OnRecuperarArbolTiposEntNegocioOperationCompleted
            End If
            Me.InvokeAsync("RecuperarArbolTiposEntNegocio", New Object(-1) {}, Me.RecuperarArbolTiposEntNegocioOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecuperarArbolTiposEntNegocioOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecuperarArbolTiposEntNegocioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecuperarArbolTiposEntNegocioCompleted(Me, New RecuperarArbolTiposEntNegocioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GuardarArbolTiposEntNegocio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GuardarArbolTiposEntNegocio(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pCabeceraNodoTipoEntNegoio() As Byte) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GuardarArbolTiposEntNegocio", New Object() {pCabeceraNodoTipoEntNegoio})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GuardarArbolTiposEntNegocioAsync(ByVal pCabeceraNodoTipoEntNegoio() As Byte)
            Me.GuardarArbolTiposEntNegocioAsync(pCabeceraNodoTipoEntNegoio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GuardarArbolTiposEntNegocioAsync(ByVal pCabeceraNodoTipoEntNegoio() As Byte, ByVal userState As Object)
            If (Me.GuardarArbolTiposEntNegocioOperationCompleted Is Nothing) Then
                Me.GuardarArbolTiposEntNegocioOperationCompleted = AddressOf Me.OnGuardarArbolTiposEntNegocioOperationCompleted
            End If
            Me.InvokeAsync("GuardarArbolTiposEntNegocio", New Object() {pCabeceraNodoTipoEntNegoio}, Me.GuardarArbolTiposEntNegocioOperationCompleted, userState)
        End Sub
        
        Private Sub OnGuardarArbolTiposEntNegocioOperationCompleted(ByVal arg As Object)
            If (Not (Me.GuardarArbolTiposEntNegocioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GuardarArbolTiposEntNegocioCompleted(Me, New GuardarArbolTiposEntNegocioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecuperarOperacionAProcesarClasificarEntrada", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecuperarOperacionAProcesarClasificarEntrada(ByVal pIdTipoCanal As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("RecuperarOperacionAProcesarClasificarEntrada", New Object() {pIdTipoCanal})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecuperarOperacionAProcesarClasificarEntradaAsync(ByVal pIdTipoCanal As String)
            Me.RecuperarOperacionAProcesarClasificarEntradaAsync(pIdTipoCanal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecuperarOperacionAProcesarClasificarEntradaAsync(ByVal pIdTipoCanal As String, ByVal userState As Object)
            If (Me.RecuperarOperacionAProcesarClasificarEntradaOperationCompleted Is Nothing) Then
                Me.RecuperarOperacionAProcesarClasificarEntradaOperationCompleted = AddressOf Me.OnRecuperarOperacionAProcesarClasificarEntradaOperationCompleted
            End If
            Me.InvokeAsync("RecuperarOperacionAProcesarClasificarEntrada", New Object() {pIdTipoCanal}, Me.RecuperarOperacionAProcesarClasificarEntradaOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecuperarOperacionAProcesarClasificarEntradaOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecuperarOperacionAProcesarClasificarEntradaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecuperarOperacionAProcesarClasificarEntradaCompleted(Me, New RecuperarOperacionAProcesarClasificarEntradaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecuperarOperacionAProcesarPostClasificar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecuperarOperacionAProcesarPostClasificar(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pTipoEntNegoioDN() As Byte) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("RecuperarOperacionAProcesarPostClasificar", New Object() {pTipoEntNegoioDN})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecuperarOperacionAProcesarPostClasificarAsync(ByVal pTipoEntNegoioDN() As Byte)
            Me.RecuperarOperacionAProcesarPostClasificarAsync(pTipoEntNegoioDN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecuperarOperacionAProcesarPostClasificarAsync(ByVal pTipoEntNegoioDN() As Byte, ByVal userState As Object)
            If (Me.RecuperarOperacionAProcesarPostClasificarOperationCompleted Is Nothing) Then
                Me.RecuperarOperacionAProcesarPostClasificarOperationCompleted = AddressOf Me.OnRecuperarOperacionAProcesarPostClasificarOperationCompleted
            End If
            Me.InvokeAsync("RecuperarOperacionAProcesarPostClasificar", New Object() {pTipoEntNegoioDN}, Me.RecuperarOperacionAProcesarPostClasificarOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecuperarOperacionAProcesarPostClasificarOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecuperarOperacionAProcesarPostClasificarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecuperarOperacionAProcesarPostClasificarCompleted(Me, New RecuperarOperacionAProcesarPostClasificarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecuperarOperacionEnCursoPara", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecuperarOperacionEnCursoPara() As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("RecuperarOperacionEnCursoPara", New Object(-1) {})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecuperarOperacionEnCursoParaAsync()
            Me.RecuperarOperacionEnCursoParaAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecuperarOperacionEnCursoParaAsync(ByVal userState As Object)
            If (Me.RecuperarOperacionEnCursoParaOperationCompleted Is Nothing) Then
                Me.RecuperarOperacionEnCursoParaOperationCompleted = AddressOf Me.OnRecuperarOperacionEnCursoParaOperationCompleted
            End If
            Me.InvokeAsync("RecuperarOperacionEnCursoPara", New Object(-1) {}, Me.RecuperarOperacionEnCursoParaOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecuperarOperacionEnCursoParaOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecuperarOperacionEnCursoParaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecuperarOperacionEnCursoParaCompleted(Me, New RecuperarOperacionEnCursoParaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IncidentarOperacionEnRelacionENFichero", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IncidentarOperacionEnRelacionENFichero(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pOperacionEnRelacionENFichero() As Byte) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("IncidentarOperacionEnRelacionENFichero", New Object() {pOperacionEnRelacionENFichero})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub IncidentarOperacionEnRelacionENFicheroAsync(ByVal pOperacionEnRelacionENFichero() As Byte)
            Me.IncidentarOperacionEnRelacionENFicheroAsync(pOperacionEnRelacionENFichero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IncidentarOperacionEnRelacionENFicheroAsync(ByVal pOperacionEnRelacionENFichero() As Byte, ByVal userState As Object)
            If (Me.IncidentarOperacionEnRelacionENFicheroOperationCompleted Is Nothing) Then
                Me.IncidentarOperacionEnRelacionENFicheroOperationCompleted = AddressOf Me.OnIncidentarOperacionEnRelacionENFicheroOperationCompleted
            End If
            Me.InvokeAsync("IncidentarOperacionEnRelacionENFichero", New Object() {pOperacionEnRelacionENFichero}, Me.IncidentarOperacionEnRelacionENFicheroOperationCompleted, userState)
        End Sub
        
        Private Sub OnIncidentarOperacionEnRelacionENFicheroOperationCompleted(ByVal arg As Object)
            If (Not (Me.IncidentarOperacionEnRelacionENFicheroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IncidentarOperacionEnRelacionENFicheroCompleted(Me, New IncidentarOperacionEnRelacionENFicheroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AnularOperacionEnRelacionENFichero", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AnularOperacionEnRelacionENFichero(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pOperacionEnRelacionENFichero() As Byte) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("AnularOperacionEnRelacionENFichero", New Object() {pOperacionEnRelacionENFichero})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AnularOperacionEnRelacionENFicheroAsync(ByVal pOperacionEnRelacionENFichero() As Byte)
            Me.AnularOperacionEnRelacionENFicheroAsync(pOperacionEnRelacionENFichero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AnularOperacionEnRelacionENFicheroAsync(ByVal pOperacionEnRelacionENFichero() As Byte, ByVal userState As Object)
            If (Me.AnularOperacionEnRelacionENFicheroOperationCompleted Is Nothing) Then
                Me.AnularOperacionEnRelacionENFicheroOperationCompleted = AddressOf Me.OnAnularOperacionEnRelacionENFicheroOperationCompleted
            End If
            Me.InvokeAsync("AnularOperacionEnRelacionENFichero", New Object() {pOperacionEnRelacionENFichero}, Me.AnularOperacionEnRelacionENFicheroOperationCompleted, userState)
        End Sub
        
        Private Sub OnAnularOperacionEnRelacionENFicheroOperationCompleted(ByVal arg As Object)
            If (Not (Me.AnularOperacionEnRelacionENFicheroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AnularOperacionEnRelacionENFicheroCompleted(Me, New AnularOperacionEnRelacionENFicheroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RechazarOperacionEnRelacionENFichero", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RechazarOperacionEnRelacionENFichero(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pOperacionEnRelacionENFichero() As Byte) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("RechazarOperacionEnRelacionENFichero", New Object() {pOperacionEnRelacionENFichero})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RechazarOperacionEnRelacionENFicheroAsync(ByVal pOperacionEnRelacionENFichero() As Byte)
            Me.RechazarOperacionEnRelacionENFicheroAsync(pOperacionEnRelacionENFichero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RechazarOperacionEnRelacionENFicheroAsync(ByVal pOperacionEnRelacionENFichero() As Byte, ByVal userState As Object)
            If (Me.RechazarOperacionEnRelacionENFicheroOperationCompleted Is Nothing) Then
                Me.RechazarOperacionEnRelacionENFicheroOperationCompleted = AddressOf Me.OnRechazarOperacionEnRelacionENFicheroOperationCompleted
            End If
            Me.InvokeAsync("RechazarOperacionEnRelacionENFichero", New Object() {pOperacionEnRelacionENFichero}, Me.RechazarOperacionEnRelacionENFicheroOperationCompleted, userState)
        End Sub
        
        Private Sub OnRechazarOperacionEnRelacionENFicheroOperationCompleted(ByVal arg As Object)
            If (Not (Me.RechazarOperacionEnRelacionENFicheroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RechazarOperacionEnRelacionENFicheroCompleted(Me, New RechazarOperacionEnRelacionENFicheroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClasificarOperacionEnRelacionENFichero", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ClasificarOperacionEnRelacionENFichero(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pOperacionEnRelacionENFichero() As Byte, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pColEntNegocioDN() As Byte) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("ClasificarOperacionEnRelacionENFichero", New Object() {pOperacionEnRelacionENFichero, pColEntNegocioDN})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ClasificarOperacionEnRelacionENFicheroAsync(ByVal pOperacionEnRelacionENFichero() As Byte, ByVal pColEntNegocioDN() As Byte)
            Me.ClasificarOperacionEnRelacionENFicheroAsync(pOperacionEnRelacionENFichero, pColEntNegocioDN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ClasificarOperacionEnRelacionENFicheroAsync(ByVal pOperacionEnRelacionENFichero() As Byte, ByVal pColEntNegocioDN() As Byte, ByVal userState As Object)
            If (Me.ClasificarOperacionEnRelacionENFicheroOperationCompleted Is Nothing) Then
                Me.ClasificarOperacionEnRelacionENFicheroOperationCompleted = AddressOf Me.OnClasificarOperacionEnRelacionENFicheroOperationCompleted
            End If
            Me.InvokeAsync("ClasificarOperacionEnRelacionENFichero", New Object() {pOperacionEnRelacionENFichero, pColEntNegocioDN}, Me.ClasificarOperacionEnRelacionENFicheroOperationCompleted, userState)
        End Sub
        
        Private Sub OnClasificarOperacionEnRelacionENFicheroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ClasificarOperacionEnRelacionENFicheroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ClasificarOperacionEnRelacionENFicheroCompleted(Me, New ClasificarOperacionEnRelacionENFicheroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClasificarYCerrarOperacionEnRelacionENFichero", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ClasificarYCerrarOperacionEnRelacionENFichero(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pOperacionEnRelacionENFichero() As Byte) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("ClasificarYCerrarOperacionEnRelacionENFichero", New Object() {pOperacionEnRelacionENFichero})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ClasificarYCerrarOperacionEnRelacionENFicheroAsync(ByVal pOperacionEnRelacionENFichero() As Byte)
            Me.ClasificarYCerrarOperacionEnRelacionENFicheroAsync(pOperacionEnRelacionENFichero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ClasificarYCerrarOperacionEnRelacionENFicheroAsync(ByVal pOperacionEnRelacionENFichero() As Byte, ByVal userState As Object)
            If (Me.ClasificarYCerrarOperacionEnRelacionENFicheroOperationCompleted Is Nothing) Then
                Me.ClasificarYCerrarOperacionEnRelacionENFicheroOperationCompleted = AddressOf Me.OnClasificarYCerrarOperacionEnRelacionENFicheroOperationCompleted
            End If
            Me.InvokeAsync("ClasificarYCerrarOperacionEnRelacionENFichero", New Object() {pOperacionEnRelacionENFichero}, Me.ClasificarYCerrarOperacionEnRelacionENFicheroOperationCompleted, userState)
        End Sub
        
        Private Sub OnClasificarYCerrarOperacionEnRelacionENFicheroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ClasificarYCerrarOperacionEnRelacionENFicheroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ClasificarYCerrarOperacionEnRelacionENFicheroCompleted(Me, New ClasificarYCerrarOperacionEnRelacionENFicheroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GuardarOperacionEnRelacionENFichero", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GuardarOperacionEnRelacionENFichero(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pOperacionEnRelacionENFichero() As Byte) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GuardarOperacionEnRelacionENFichero", New Object() {pOperacionEnRelacionENFichero})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GuardarOperacionEnRelacionENFicheroAsync(ByVal pOperacionEnRelacionENFichero() As Byte)
            Me.GuardarOperacionEnRelacionENFicheroAsync(pOperacionEnRelacionENFichero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GuardarOperacionEnRelacionENFicheroAsync(ByVal pOperacionEnRelacionENFichero() As Byte, ByVal userState As Object)
            If (Me.GuardarOperacionEnRelacionENFicheroOperationCompleted Is Nothing) Then
                Me.GuardarOperacionEnRelacionENFicheroOperationCompleted = AddressOf Me.OnGuardarOperacionEnRelacionENFicheroOperationCompleted
            End If
            Me.InvokeAsync("GuardarOperacionEnRelacionENFichero", New Object() {pOperacionEnRelacionENFichero}, Me.GuardarOperacionEnRelacionENFicheroOperationCompleted, userState)
        End Sub
        
        Private Sub OnGuardarOperacionEnRelacionENFicheroOperationCompleted(ByVal arg As Object)
            If (Not (Me.GuardarOperacionEnRelacionENFicheroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GuardarOperacionEnRelacionENFicheroCompleted(Me, New GuardarOperacionEnRelacionENFicheroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutorizadoConfigurarClienteSonda", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutorizadoConfigurarClienteSonda(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pDatosIdentidad() As Byte) As Boolean
            Dim results() As Object = Me.Invoke("AutorizadoConfigurarClienteSonda", New Object() {pDatosIdentidad})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutorizadoConfigurarClienteSondaAsync(ByVal pDatosIdentidad() As Byte)
            Me.AutorizadoConfigurarClienteSondaAsync(pDatosIdentidad, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutorizadoConfigurarClienteSondaAsync(ByVal pDatosIdentidad() As Byte, ByVal userState As Object)
            If (Me.AutorizadoConfigurarClienteSondaOperationCompleted Is Nothing) Then
                Me.AutorizadoConfigurarClienteSondaOperationCompleted = AddressOf Me.OnAutorizadoConfigurarClienteSondaOperationCompleted
            End If
            Me.InvokeAsync("AutorizadoConfigurarClienteSonda", New Object() {pDatosIdentidad}, Me.AutorizadoConfigurarClienteSondaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutorizadoConfigurarClienteSondaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutorizadoConfigurarClienteSondaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutorizadoConfigurarClienteSondaCompleted(Me, New AutorizadoConfigurarClienteSondaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecuperarOperacionxID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecuperarOperacionxID(ByVal idOperacion As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("RecuperarOperacionxID", New Object() {idOperacion})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecuperarOperacionxIDAsync(ByVal idOperacion As String)
            Me.RecuperarOperacionxIDAsync(idOperacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecuperarOperacionxIDAsync(ByVal idOperacion As String, ByVal userState As Object)
            If (Me.RecuperarOperacionxIDOperationCompleted Is Nothing) Then
                Me.RecuperarOperacionxIDOperationCompleted = AddressOf Me.OnRecuperarOperacionxIDOperationCompleted
            End If
            Me.InvokeAsync("RecuperarOperacionxID", New Object() {idOperacion}, Me.RecuperarOperacionxIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecuperarOperacionxIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecuperarOperacionxIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecuperarOperacionxIDCompleted(Me, New RecuperarOperacionxIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecuperarRelacionEnFicheroXID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecuperarRelacionEnFicheroXID(ByVal id As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("RecuperarRelacionEnFicheroXID", New Object() {id})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecuperarRelacionEnFicheroXIDAsync(ByVal id As String)
            Me.RecuperarRelacionEnFicheroXIDAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecuperarRelacionEnFicheroXIDAsync(ByVal id As String, ByVal userState As Object)
            If (Me.RecuperarRelacionEnFicheroXIDOperationCompleted Is Nothing) Then
                Me.RecuperarRelacionEnFicheroXIDOperationCompleted = AddressOf Me.OnRecuperarRelacionEnFicheroXIDOperationCompleted
            End If
            Me.InvokeAsync("RecuperarRelacionEnFicheroXID", New Object() {id}, Me.RecuperarRelacionEnFicheroXIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecuperarRelacionEnFicheroXIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecuperarRelacionEnFicheroXIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecuperarRelacionEnFicheroXIDCompleted(Me, New RecuperarRelacionEnFicheroXIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub RecuperarOperacionActivaPorEntidadNegocioCompletedEventHandler(ByVal sender As Object, ByVal e As RecuperarOperacionActivaPorEntidadNegocioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecuperarOperacionActivaPorEntidadNegocioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub ProcesarColComandoOperacionCompletedEventHandler(ByVal sender As Object, ByVal e As ProcesarColComandoOperacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcesarColComandoOperacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub FicheroIncidentadoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub AltaDocumentoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub RecuperarColTipoCanalCompletedEventHandler(ByVal sender As Object, ByVal e As RecuperarColTipoCanalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecuperarColTipoCanalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub RecuperarNumDocPendientesClasificaryPostClasificacionCompletedEventHandler(ByVal sender As Object, ByVal e As RecuperarNumDocPendientesClasificaryPostClasificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecuperarNumDocPendientesClasificaryPostClasificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub RecuperarArbolTiposEntNegocioCompletedEventHandler(ByVal sender As Object, ByVal e As RecuperarArbolTiposEntNegocioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecuperarArbolTiposEntNegocioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub GuardarArbolTiposEntNegocioCompletedEventHandler(ByVal sender As Object, ByVal e As GuardarArbolTiposEntNegocioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GuardarArbolTiposEntNegocioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub RecuperarOperacionAProcesarClasificarEntradaCompletedEventHandler(ByVal sender As Object, ByVal e As RecuperarOperacionAProcesarClasificarEntradaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecuperarOperacionAProcesarClasificarEntradaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub RecuperarOperacionAProcesarPostClasificarCompletedEventHandler(ByVal sender As Object, ByVal e As RecuperarOperacionAProcesarPostClasificarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecuperarOperacionAProcesarPostClasificarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub RecuperarOperacionEnCursoParaCompletedEventHandler(ByVal sender As Object, ByVal e As RecuperarOperacionEnCursoParaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecuperarOperacionEnCursoParaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub IncidentarOperacionEnRelacionENFicheroCompletedEventHandler(ByVal sender As Object, ByVal e As IncidentarOperacionEnRelacionENFicheroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IncidentarOperacionEnRelacionENFicheroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub AnularOperacionEnRelacionENFicheroCompletedEventHandler(ByVal sender As Object, ByVal e As AnularOperacionEnRelacionENFicheroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AnularOperacionEnRelacionENFicheroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub RechazarOperacionEnRelacionENFicheroCompletedEventHandler(ByVal sender As Object, ByVal e As RechazarOperacionEnRelacionENFicheroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RechazarOperacionEnRelacionENFicheroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub ClasificarOperacionEnRelacionENFicheroCompletedEventHandler(ByVal sender As Object, ByVal e As ClasificarOperacionEnRelacionENFicheroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ClasificarOperacionEnRelacionENFicheroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub ClasificarYCerrarOperacionEnRelacionENFicheroCompletedEventHandler(ByVal sender As Object, ByVal e As ClasificarYCerrarOperacionEnRelacionENFicheroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ClasificarYCerrarOperacionEnRelacionENFicheroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub GuardarOperacionEnRelacionENFicheroCompletedEventHandler(ByVal sender As Object, ByVal e As GuardarOperacionEnRelacionENFicheroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GuardarOperacionEnRelacionENFicheroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub AutorizadoConfigurarClienteSondaCompletedEventHandler(ByVal sender As Object, ByVal e As AutorizadoConfigurarClienteSondaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutorizadoConfigurarClienteSondaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub RecuperarOperacionxIDCompletedEventHandler(ByVal sender As Object, ByVal e As RecuperarOperacionxIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecuperarOperacionxIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")>  _
    Public Delegate Sub RecuperarRelacionEnFicheroXIDCompletedEventHandler(ByVal sender As Object, ByVal e As RecuperarRelacionEnFicheroXIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecuperarRelacionEnFicheroXIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
End Namespace
