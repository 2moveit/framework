<#@ template language="C#" HostSpecific="True" #>
<#@ output extension="ascx" #>
<# Type entityType = ((MvcTextTemplateHost)(Host)).ViewDataType; #>
@using <#= entityType.Namespace #>

<%
@using (var e = Html.TypeContext<<#= entityType.Name #>>()) 
{
<#
string[] commonProperties = {"Ticks","Id", "IdOrNull", "ToStr","IsNew","SelfModified","ToStringMethod","Error","Item","Modified","AllowChange"};
PropertyInfo[] properties = entityType.GetProperties(BindingFlags.Instance | BindingFlags.Public);
foreach(PropertyInfo pi in properties) {
if (Array.IndexOf(commonProperties,pi.Name)>-1)
continue;
if (pi.PropertyType.IsValueType || pi.PropertyType == typeof(string)){
#>
	@Html.ValueLine(e, f => f.<#= pi.Name #>);
<#} 
else if (typeof(IList).IsAssignableFrom(pi.PropertyType)) {
#>
	@Html.EntityList(e, f => f.<#= pi.Name #>);
<#}
else {
#>
	@Html.EntityLine(e, f => f.<#= pi.Name #>);
<#}	
}#>
}
%>
